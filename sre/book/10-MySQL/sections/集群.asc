=== MySQL集群

[cols=2*] 
|===

|主节点
|10.0.2.20

|从节点
|10.0.2.30
|===

==== 主从备份

**主节点配置**

.修改 `my.cnf` 文件

[source,bash]
----
vim /etc/my.cnf
[mysqld]
#记录操作日志
log-bin=mysql-bin
#不同步mysql系统数据库
binlog-ignore-db = mysql
#数据库集群的节点id
server-id=20
----

.修改系统配置
[source,bash]
----
# 重启数据库服务，使配置文件生效
systemctl restart mariadb
# 在主节点创建一个slave用户连接节点mysql2，并赋予从节点同步主节点数据库权限
mysql -uroot -pgeek -e 'grant replication slave on *.* to slave@"10.0.2.30" identified by "geek";flush privileges;'
----


**从节点配置**

.修改 `my.cnf` 文件

[source,bash]
----
vim /etc/my.cnf
[mysqld]
log-bin=mysql-bin
replicate-ignore-db=mysql
server-id=30
----

.修改系统配置


在主节点使用 `show master stauts;` 查询

`master_log_file` 和 `master_log_pos`

[source,bash]
----
systemctl restart mariadb

mysql -uroot -pgeek -e 'change master to master_host="10.0.2.20",master_user="slave",master_password="geek",master_log_file="xxxx",master_log_pos=xxxx;start slave;flush privileges;'
----

.验证从节点服务是否开启
在从节点服务器执行命令: `mysql -uroot -pgeek -e 'show slave status\G'``,如果 `Slave_IO_Running` 和 `Slave_SQL_Running` 的状态都为YES，则节点服务开启成功
[source,bash]
----
[root@ylighgh ~]# mysql -uroot -pgeek -e'show slave status\G'
*************************** 1. row ***************************
            ...
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
            ...
----

==== 主主备份

**主节点配置**

.修改 `my.cnf` 文件

[source,bash]
----
vim /etc/my.cnf
[mysqld]
log-bin=mysql-bin
binlog-ignore-db=mysql
binlog-ignore-db=information_scheme 
server-id=20
----

.修改系统配置

使用 `show master stauts;` 查询信息

修改 `master_log_file` 和 `master_log_pos`

[source,bash]
----
systemctl restart mariadb
mysql -uroot -pgeek -e 'grant replication slave on *.* to slave@"10.0.2.30" identified by "geek";flush privileges;'

mysql -uroot -pgeek -e 'change master to master_host="10.0.2.30",master_user="slave",master_password="geek",master_log_file="xxxx",master_log_pos=xxxx;start slave;flush privileges;'
----


**从节点配置**

.修改 `my.cnf` 文件

[source,bash]
----
vim /etc/my.cnf
[mysqld]
log-bin=mysql-bin
binlog-ignore-db=mysql
binlog-ignore-db=information_scheme 
server-id=30
----

.修改系统配置

使用 `show master stauts;` 查询信息

修改 `master_log_file` 和 `master_log_pos`

[source,bash]
----
systemctl restart mariadb
mysql -uroot -pgeek -e 'grant replication slave on *.* to slave@"10.0.2.20" identified by "geek";flush privileges;'


mysql -uroot -pgeek -e 'change master to master_host="10.0.2.20",master_user="slave",master_password="geek",master_log_file="xxxx",master_log_pos=xxxx;start slave;flush privileges;'
----

.验证主从节点服务是否开启
在主从节点服务器执行命令: `mysql -uroot -pgeek -e 'show slave status\G'``,如果 `Slave_IO_Running` 和 `Slave_SQL_Running` 的状态都为YES，则节点服务开启成功
[source,bash]
----
[root@ylighgh ~]# mysql -uroot -pgeek -e'show slave status\G'
*************************** 1. row ***************************
            ...
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
            ...
----

==== 多主一从

[cols=2*] 
|===

|主节点1
|10.0.2.20

|主节点2
|10.0.2.30

|从节点
|10.0.2.40
|===

**主节点1配置**

.修改 `my.cnf` 文件
[source,bash]
----
vim /etc/my.cnf
[mysqld]
log-bin=mysql-bin
binlog-ignore-db=mysql
binlog-ignore-db=information_scheme 
server-id=20
----

.重启MySQL
[source,bash]
----
systemctl restart mariadb
----

.修改系统配置
[source,bash]
----
mysql -uroot -pgeek -e 'grant replication slave on *.* to slave@"10.0.2.40" identified by "geek";flush privileges;'
----

**主节点2配置**

.修改 `my.cnf` 文件
[source,bash]
----
vim /etc/my.cnf
[mysqld]
log-bin=mysql-bin
binlog-ignore-db=mysql
binlog-ignore-db=information_scheme 
server-id=30
----

.重启MySQL
[source,bash]
----
systemctl restart mariadb
----

.修改系统配置
[source,bash]
----
mysql -uroot -pgeek -e 'grant replication slave on *.* to slave@"10.0.2.40" identified by "geek";flush privileges;'
----

**从节点配置**

.修改 `my.cnf` 文件
[source,bash]
----
vim /etc/my.cnf
[mysqld_multi]
mysqld=/usr/bin/mysqld_safe
mysqladmin=/usr/bin/mysqladmin
log=/tmp/multi.log

[mysqld20]
port=3307
datadir=/var/lib/mysqla/
pid-file=/var/lib/mysqla/mysqld.pid
socket=/var/lib/mysqla/mysql.sock
user=mysql
server-id=40

[mysqld30]
port=3308
datadir=/var/lib/mysqlb/
pid-file=/var/lib/mysqlb/mysqld.pid
socket=/var/lib/mysqlb/mysql.sock
user=mysql
server-id=40
----

.初始化数据库,生成目录
`mysqla` `mysqlb`
[source,bash]
----
mysql_install_db --datadir=/var/lib/mysqla --user=mysql
mysql_install_db --datadir=/var/lib/mysqlb --user=mysql

chown -R mysql:mysql /var/lib/mysqla
chown -R mysql:mysql /var/lib/mysqlb
----


.启动MySQL
[source,bash]
----
mysqld_multi --defaults-file=/etc/my.cnf start 20
mysqld_multi --defaults-file=/etc/my.cnf start 30
----

.查看状态
[source,bash]
----
[root@slave2-2022 ~]# ss -antpl|grep mysql
LISTEN     0      50           *:3307                     *:*                   users:(("mysqld",pid=6964,fd=14))
LISTEN     0      50           *:3308                     *:*                   users:(("mysqld",pid=7925,fd=14))

----


.修改从节点配置
**3308** 
[source,bash]
----
mysql -uroot -P 3307 -S /var/lib/mysqla/mysql.sock

change master to master_user='slave',master_password='geek',master_host='10.0.2.20',master_log_file='mysql-bin.000014',master_log_pos=1312;start slave;
----

**3307**
[source,bash]
----
mysql -uroot -P 3308 -S /var/lib/mysqlb/mysql.sock

change master to master_user='slave',master_password='geek',master_host='10.0.2.30',master_log_file='mysql-bin.000011',master_log_pos=629;start slave;
----