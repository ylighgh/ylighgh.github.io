==== NetworkManager

.设置IP地址
[source,bash]
----
nmcli c modify enp1s0 ipv4.addresses 192.168.122.120/24 ipv4.method manual
nmcli c modify enp1s0 ipv4.gateway 192.168.122.1
nmcli c modify enp1s0 ipv6.method ignore
nmcli c modify enp1s0 ipv4.dns "223.5.5.5 223.6.6.6"
nmcli c modify enp1s0 connection.autoconnect yes
nmcli c modify eno1 ethernet.cloned-mac-address 90:b1:1c:4f:d9:e5
----
.修改网卡名
[source,bash]
----
nmcli c modify 'enp1s0' connection.id eno1
nmcli c reload
nmcli c up eno2
----

.修改设备网卡名
[source,bash]
----
nmcli c modify eno1 connection.interface-name eno1
----

**创建网桥**

[IMPORTANT]
====
- 为了防止创建网桥失败,主机断网,在创建之前开启恢复脚本,网桥创建成功手动kill掉
====

[source,bash]
----
# 增加恢复脚本
cat <<EOF> update_network_delayed.sh
#!/bin/bash

sleep 120

nmcli c delete br1
nmcli c delete eno1

nmcli c add type ethernet autoconnect yes con-name eno1 ifname eno1
nmcli c modify eno1 ipv4.addresses 221.236.30.3/24 ipv4.method manual
nmcli c modify eno1 ipv4.gateway 221.236.30.1
nmcli c modify eno1 ipv4.dns "61.139.2.69,223.5.5.5"

nmcli c modify eno1 ethernet.cloned-mac-address 90:b1:1c:4f:d9:e5

nmcli c up eno1

echo "Network configuration has been updated."

EOF
----

[source,bash]
----
# 创建br1网桥
nmcli c add type bridge autoconnect yes con-name br1 ifname br1
nmcli c modify br1 bridge.stp no
nmcli c modify br1 ipv6.method ignore
nmcli c modify br1 ipv4.addresses 221.236.30.3/24 ipv4.method manual
nmcli c modify br1 ipv4.gateway 221.236.30.1
nmcli c modify br1 ipv4.dns "223.5.5.5 223.6.6.6"
----

[source,bash]
----
cat <<EOF> br1.sh
#!/bin/bash

nmcli c delete eno1
nmcli c add type ethernet autoconnect yes con-name eno1 ifname eno1 master br1
nmcli c up br1
EOF
----

[source,bash]
----
# 先开启恢复脚本,再创建网桥
sh update_network_delayed.sh &
sh br1.sh
----