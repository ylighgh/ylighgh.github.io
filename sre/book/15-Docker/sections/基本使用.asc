=== 基本使用

.拉取镜像
[source,bash]
----
docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]
----

.运行
[source,bash]
----
docker run -itd --name myubuntu test/ubuntu:v1.0 /bin/bash
----

.批量删除容器
[source,bash]
----
docker rm -f $(docker ps -qa)
----

.自动启动
[source,bash]
----
--restart参数=
	no
		默认策略，在容器退出时不重启容器
	on-failure
		在容器非正常退出时（退出状态非0），才会重启容器
	on-failure:3
		在容器非正常退出时重启容器，最多重启3次
	always
		在容器退出时总是重启容器
#开机自启
	unless-stopped
		在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器
# 一般推荐使用always参数
	--restart=always
----
.将正在运行的容器设为自启动
[source,bash]
----
# docker update --restart=always 容器名或容器ID
docker update --restart=always <CONTAINER ID>
# 例如将tomcat设为自启动
docker update --restart=always tomcat
----
.将自启动的容器取消自启动
[source,bash]
----
# docker update --restart=no 容器名或容器ID
docker update --restart=no <CONTAINER ID>
# 例如取消tomcat的自启动
docker update --restart=no tomcat
----

.挂载文件
需要持久化的数据: 日志 配置文件 业务数据 临时缓存数据
[source,bash]
----

----

.导入导出容器
[source,bash]
----
# 导出容器
docker export 容器ID > 文件名.tar.gz

# 导入容器
cat 文件名.tar.gz |docker import - 镜像用户/镜像名:版本号
----

.提交容器
[source,bash]
----
docker commit -m "描述信息" -a="作者" 容器ID 要创建的镜像名:[标签名]
----