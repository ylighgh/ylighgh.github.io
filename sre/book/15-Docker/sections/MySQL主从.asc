=== MySQL主从

==== 主节点配置
.环境准备
[source,bash]
----
mkdir -p /docker/mysql-master/conf
----

.启动MySQL-master
[source,bash]
----
docker run -d -p 3307:3306 --name mysql-master --privileged=true \
-v /docker/mysql-master/log:/var/log/mysql \
-v /docker/mysql-master/data:/var/lib/mysql \
-v /docker/mysql-master/conf:/etc/mysql/conf.d \
-v /etc/localtime:/etc/localtime \
-e MYSQL_ROOT_PASSWORD=123456 \
-d mysql:5.7
----

.配置文件
[source,bash]
----
cat <<EOF> /docker/mysql-master/conf/my.cnf
[client]
default_character_set = utf8
[mysqld]
# 设置字符集
collation_server = utf8_general_ci
character_set_server = utf8
# 设置server_id(唯一)
server_id=101
# 指定不需要同步的数据库
binlog-ignore-db = mysql
# 记录操作日志
log-bin=mysql-bin
# 设置二进制日志使用内存大小
binlog_cache_size=1M
# 设置使用的二进制日志格式(mixed,statement,row)
binlog_format=mixed
# 二进制日志过期清理时间
expire_logs_days=7
# 忽略错误 主键重复
slave_skip_errors=1062
EOF

#### 重启使配置文件生效
docker restart mysql-master
----

.数据库配置
[source,bash]
----
# 进入容器内部
docker exec -it mysql-master bash
# 执行命令
mysql -uroot -p123456 -e 'grant replication slave on *.* to slave@"%" identified by "123456";flush privileges;show master status;'
----
==== 从节点配置
.环境准备
[source,bash]
----
mkdir -p /docker/mysql-slave/conf
----
.启动MySQL-slave
[source,bash]
----
docker run -d -p 3308:3306 --name mysql-slave --privileged=true \
-v /docker/mysql-slave/log:/var/log/mysql \
-v /docker/mysql-slave/data:/var/lib/mysql \
-v /docker/mysql-slave/conf:/etc/mysql/conf.d \
-v /etc/localtime:/etc/localtime \
-e MYSQL_ROOT_PASSWORD=123456 \
-d mysql:5.7
----

.配置文件
[source,bash]
----
cat <<EOF> /docker/mysql-slave/conf/my.cnf
[client]
default_character_set = utf8
[mysqld]
# 设置字符集
collation_server = utf8_general_ci
character_set_server = utf8
# 设置server_id(唯一)
server_id=102
# 指定不需要同步的数据库
binlog-ignore-db = mysql
# 记录操作日志
log-bin=mysql-slave1-bin
# 设置二进制日志使用内存大小
binlog_cache_size=1M
# 设置使用的二进制日志格式(mixed,statement,row)
binlog_format=mixed
# 二进制日志过期清理时间
expire_logs_days=7
# 忽略错误 主键重复
slave_skip_errors=1062
# relay_log配置中继日志
relay_log=mysql-relay-bin
# log_slave_updates表示将slave复制事件写进自己的二进制日志
log_slave_updates=1
# slave设置为只读
read_only=1
EOF

### 重启mysql使配置文件生效
docker restart mysql-slave
----
.数据库配置
[source,bash]
----
# 进入容器内部
docker exec -it mysql-slave bash
# 执行命令
mysql -uroot -p123456 -e 'change master to master_host="IP",master_user="slave",master_password="123456",master_port=3307,master_log_file="xxxx",master_log_pos=xxxx;start slave;flush privileges;'
----

