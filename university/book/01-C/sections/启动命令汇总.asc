=== 容器启动命令

[source, bash]
docker run -d --restart=always --name test  centos:7 docker-entrypoint.sh

`docker-entrypoint.sh` 表示容器中的 `/usr/local/bin/docker-entrypoint.sh` ，通常内容为：

[source, bash]
----
#!/bin/sh
/usr/bin/rm -f /run/nginx.pid && /usr/sbin/nginx -t && /usr/sbin/nginx

# 始终放到最后，防止以上命令启动失败，导致容器无法启动。
# 容器启动失败的处理流程较复杂，用此代码保证能进入容器处理故障。
while true
do
    sleep 100
done
----

.单行版本
[source, bash]
----
docker run \
	-d \
	--restart always \
	--env LANG=en_US.UTF-8 \
	--env TZ=Asia/Shanghai \
	--name lift360_all_data \
    --mount type=bind,source=/etc/localtime,target=/etc/localtime,readonly \
	--mount source=lift360_all_data,target=/data \
	centos:6 \
	bash -c 'while true; do sleep 100; done;'
----

==== 程序启动命令汇总

===== PSQL
[source, bash]
----
docker pull centos/postgresql-94-centos7

docker run \
    -d \
    --restart always \
    --env LANG=en_US.UTF-8 \
    --env TZ=Asia/Shanghai \
    --mount type=bind,source=/etc/localtime,target=/etc/localtime,readonly \
    -p 18080:8080 \
    --name xxl_job_tomcat \
    xxl_job_tomcat \
    docker-entrypoint.sh

#免密码登录
echo '127.0.0.1:15432:esafesys_com:postgres:GcMuEKzRtvNIAiX1' > ~/.pgpass
chmod 600 ~/.pgpass

psql -h 127.0.0.1 -p 15432 -U postgres -c "create database esafesys_com;"

#导入数据库
psql -h 127.0.0.1 -p 15432 -U postgres esafesys_com -f foo.sql
----

===== MySQL5.1
[source, bash]
----
/usr/bin/mysqld_safe
----

或者

[source, bash]
----
/usr/libexec/mysqld \
    --basedir=/usr \
    --datadir=/var/lib/mysql \
    --user=mysql \
    --log-error=/var/log/mysqld.log \
    --pid-file=/var/run/mysqld/mysqld.pid \
    --socket=/var/lib/mysql/mysql.sock
----

=====  MySQL5.6+

[source, bash]
----
/usr/sbin/mysqld \
    --basedir=/usr \
    --datadir=/var/lib/mysql \
    --plugin-dir=/usr/lib64/mysql/plugin \
    --user=mysql --log-error=/var/log/mysqld.log \
    --pid-file=/var/run/mysqld/mysqld.pid \
    --socket=/var/lib/mysql/mysql.sock
----

=====  Tomcat

[source, bash]
----
su tomcat --shell /usr/libexec/tomcat/server start
----

=====  zookeeper

[source, bash]
----
su - zookeeper -c '/usr/local/zookeeper/bin/zkServer.sh start-foreground'
----

===== Nginx

[source, bash]
----
/usr/bin/rm -f /run/nginx.pid && /usr/sbin/nginx -t && /usr/sbin/nginx
----

===== Pure-FTPd

[source, bash]
----
/usr/sbin/pure-config.pl /etc/pure-ftpd/pure-ftpd.conf --daemonize
----

[NOTE]
要在 Docker 中使用 Pure-FTPd，请查看  <<Pure-FTPd in Docker>>

