=== CentOS8安装配置

==== 准备分区

[source, bash]
----
# XFS必须启用ftype参数，比如硬盘分区 /dev/sda1
mkfs.xfs -n ftype=1 -f $硬盘分区

# 挂载硬盘分区，用于存储Docker数据
echo `ll /dev/disk/by-uuid/|grep $硬盘分区|awk '{print "UUID="$9" /data                   xfs     defaults        0 0"}'` >> /etc/fstab

# 自动挂载所有分区
mount -a

# 验证挂载
df -h|grep /data

mkdir -p /data/var/lib/docker
----

==== 安装

[source, bash]
----
dnf install -y yum-utils

yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

dnf install -y docker-ce docker-ce-cli containerd.io

systemctl enable docker
----

==== 配置

[source, bash]
----
echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.conf
echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.conf
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf

sysctl -p

mkdir -p /etc/docker
cat << EOF > /etc/docker/daemon.json
{
  "registry-mirrors": [
    "https://registry.docker-cn.com",
    "https://dockerhub.azk8s.cn",
    "https://hub-mirror.c.163.com"
  ],
  "graph": "/var/lib/docker",
  "storage-driver": "overlay2",
  "dns" : [
    "223.5.5.5",
    "223.6.6.6"
  ]
}
EOF
----

TIP: mirrors 位置最后一个优先级高

.参数说明
registry-mirrors:: Docker镜像源
graph:: Docker数据目录
storage-driver:: Docker 数据文件存储路径
dns:: 容器默认DNS。如果不设置可能出现 `git pull` 缓慢

最后，启动或重启docker服务：

[source, bash]
systemctl restart docker

==== 查看Docker运行信息

[source, console]
----
[root@dell7 ~]# docker info
Client:
 Debug Mode: false

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 1
 Server Version: 19.03.13
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 8fba4e9a7d01810a393d5d25a3621dc101981175
 runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd
 init version: fec3683
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 4.18.0-147.8.1.el8_1.x86_64
 Operating System: CentOS Linux 8 (Core)
 OSType: linux
 Architecture: x86_64
 CPUs: 4
 Total Memory: 15.46GiB
 Name: dell7
 ID: WFX3:WXWH:WPML:VRCA:QRTN:LGCB:6UBM:V73O:QEGU:KADY:V3FH:E4Q6
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Registry Mirrors:
  https://hub-mirror.c.163.com/
 Live Restore Enabled: false
----

==== 测试

拉取测试镜像：

[source, bash]
----
docker pull hello-world
----

.控制台输出
[source, console]
----
[root@dell7 ~]# docker pull hello-world
Using default tag: latest
latest: Pulling from library/hello-world
0e03bdcc26d7: Already exists 
Digest: sha256:e7c70bb24b462baa86c102610182e3efcb12a04854e8c582838d92970a09f323
Status: Downloaded newer image for hello-world:latest
docker.io/library/hello-world:latest
----

创建测试容器：

[source, bash]
----
docker run --name hello hello-world
----

.控制台输出
[source, console]
----
[root@dell7 ~]# docker run --name hello hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

......
----

查看已经创建的容器：
[source, bash]
----
docker ps -a
----

.控制台输出
[source, console]
----
[root@dell7 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
59cc42b09fce        hello-world         "/hello"            24 seconds ago      Exited (0) 22 seconds ago                       hello
----

删除测试容器：

[source, bash]
----
docker rm hello
----
