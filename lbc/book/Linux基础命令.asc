= Linux Basic Command

== ls

[cols="1,2", options="ls"] 
|===
|*用法*
|*含义*

|ls（list）
|列出当前工作目录下的所有文件/文件夹的名称

|ls 路径
|列出指定路径下所有的文件/文件夹的名称

|ls  选项 路径
|在列出制定路径下的文件/文件夹的名称，并以指定的格式进行显示

|===

常见的选项
[cols="1,2", options="ls options"] 
|===
|*参数*
|*含义*

|-l
|表示list，表示以详细列表的形式进行展示

|-a
|表示显示所有的文件/文件夹（包含了隐藏文件）

|-lah
|表示列出制定路径下的所有文件/文件夹的名称，以列表的形式并且在显示文档大小的时候以可读性较高的形式显示

|===

.关于路径：
路径可以分为两种（相对路径，绝对路径）

相对路径：相对路径首先有一个参照物（一般是当前的工作路径）;

相对路径的写法：在相对路径中通常会用到2个符号 *"./"(表示当前目录下)*  ，*"../(表示上一级目录下 )"*;

绝对路径：绝对路径不需要参照物，直接从根"/"开始寻找对应路径;

== pwd

[cols="1,2", options="pwd"] 
|===
|*用法*
|*含义*

|pwd
|print working directory （打印当前工作目录）

|===

== cd

(change directory 改变目录)

作用：用于切换的当前的工作目录

语法：cd 路径

== mkdir

指令：mkdir

(make directory 创建目录)

[cols="1,2", options="mkdir"] 
|===
|*用法*
|*含义*

|mkdir 路径（路径，可以是文件夹名称也可以是包含名称的一个完整路径）
|在指定路径下创建一个文件夹

|mkdir -p 路径
|当一次性创建多层不存在的目录的时候，添加-p参数，否则会报错

|mkdir  路径1 路径2 路径3 ...
|表示一次性创建多个目录

|===

== touch

指令：touch

作用：创建文件

语法：touch 文件路径 （文件路径可以是直接的文件名也可以是路径）

== cp

指令：cp（copy 复制）

作用：复制文件/文件夹到指定的位置

语法：cp 被复制的文档路径 文档被复制到的路径

WARNING: Linux在复制的过程中是可以重新对新位置的文件进行重命名的，但是如果不是必须的需要，则建议前后名称保持一直

WARNING: 当使用cp命令进行文件夹复制操作的时候需要添加选项"-r"（-r 表示递归复制），否则目录将被忽略

== mv

指令：mv （move 移动 剪切）

作用：移动文档到新的位置

语法：mv 需要移动的文档路径 需要保存的位置路径

TIP: 在Linux中重命名的命令也是mv，语法和移动语法一样

== rm

指令：rm（remove 移除 删除）

作用：移除/删除 文档

语法：rm 选项 需要移除的文档路径/文件名

[cols="1,2", options="rm"] 
|===
|*选项*
|*含义*

|-f
|表示强制（force）删除文档，不提示是否删除

|-r
|删除一个目录的时候做递归删除


|===

WARNING: 在删除的时候如果不带选项，会提示是否删除，如果需要确认则输入"y/yes"，否则输入"n/no"按下回车

WARNING: 删除一个目录的时候需要做递归删除，并且一般也不需要进行删除确认询问，所以移除目录的时候一般需要使用-rf选项

== 输出重定向

一般命令的输出都会显示在终端中，优势哟需要将一些命令而执行结果想要保存到文件中进行后续的分析/统计，则这时候需要使用到的输出重定向技术

>：*覆盖* 输出，会覆盖掉原先的文件内容

>>：*追加* 输出，不会覆盖晕是文件内容，会在原始内容末尾继续添加

语法：正常的指令 > / >> 文件的路径

TIP: 文件可以不存在，不存在会自动新建

== cat

指令：cat

[cols="2,2", options="cat"] 
|===
|*用法*
|*含义*

|cat 文件1
|直接将一个文件的内容输出在终端上

|cat  待合并的文件1 待合并的文件2  .... 文件n > 合并之后的文件名
|进行文件合并

|===
