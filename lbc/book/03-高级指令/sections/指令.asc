=== hostname

指令：`hostname 选项`

含义：表示输出当前完整的主机名

作用：操作服务器的 *主机名*（读取）

[cols="1,1", options="hostname"] 
|===
|*选项*
|*含义*

|-f
|表示输出当前主机名中的FQDN(全限定域名)

|===

=== id

指令：`id 选项` 

作用：查看一个用户的一些基本信息（包含用户id 用户组id 附加组id）该指令如果不指定用户则默认当前目录

[cols="1,1", options="id"] 
|===
|*选项*
|*含义*

|用户名
|显示指定用户的基本信息

|===

=== whoami

指令：`whoami`

作用：显示当前登录的用户名，一般用于shell脚本，用于获取当前操作的用户名去方便记录日志

=== ps -ef

指令：`ps 选项`

作用：主要是查看服务器的进程信息

[cols="1,1", options="ps"] 
|===
|*选项*
|*含义*

|-e
|表示列出全部的进程

|-f
|表示显示全部的列（显示全字段）

|===

image::ps-ef.png[]

[source]
--
UID：该进行执行的用户id；
PID：进程id；
PPID：该进程的父级id，如果一个程序的父级进程找不到，该程序的进程称之为僵尸进程；
C：表示CPU的占用率，其形式是百分数；
STIME：该进程的启动时间；
TTY：终端设备，发起该进程的设备识别符号，如果显示“?”则表示该进程并不是由终端设备发起；
TIME：表示进程的执行时间；
CMD：该进程的名称或者对应的路径；
--

案例 ： 在ps的结果中过滤出想要查看的进程状态

`ps -ef | grep 进程名称`

image::ps-ef拓展.png[]

=== top

指令：`top` 

作用：查看服务器的进程占用资源情况（动态显示）

image::top.png[]

退出按 `q` 键或者 `Ctrl+C`

输出的结果：

image::top_02.png[]

[source]
--
PID：进程id；
USER：该进程对应的用户；
PR：优先级；
NI：用户进程空间内改变过优先级的进程占用CPU百分比；
VIRT：虚拟内存；
RES：常驻内存；
SHR：共享内存；
           计算一个进程实际使用的内存 = 常驻内存（RES）- 共享内存（SHR）
S：表示进程的状态（sleeping，其中S表示睡眠，R表示运行）
%CPU：表示CPU的占用百分比；
%MEM：表示内存的占用百分比；
TIME+：执行时间；
COMMAND：进程的名称或者路径；
--

*在运行top的时候，可以按以下方便快捷键*

[cols="1,1", options="top"] 
|===
|*快捷键*
|*含义*

|M
|表示将结果按照内存（MEM）从高到低进行降序排列

|P
|表示将结果按照CPU使用率从高到低进行降序排列

|1
|当服务器拥有多个CPU的时候，可以使用"1"快捷键来切换是否显示各个CPU的详细信息

|===

=== du -sh

指令：`du -sh 目录路径`

作用：查看目录的真实大小

-s：（summaries）只显示汇总的大小

-h：表示以高可读性的形式进行显示

=== find

指令：`find 路径范围 选项 选项的值 `（其参数有55个之多）

作用：用于查找文件

[cols="1,1", options="top"] 
|===
|*选项*
|*含义*

|-name
|按照文档名称进行搜索（支持模糊搜索）

|-type
|按照文档的类型进行搜索

|===

TIP: 文档类型"-"表示文件（在find的时候需要用f来替换），"d"表示文件夹

案例：使用find来搜索/etc/sane.d/目录下所有的文件

语法：`find /etc/sane.d/ -type f`

image::find_01.png[]

=== systemctl

指令：`systemctl start/stop/restart/status  服务名` 

作用：用于控制一些软件的服务启动/停止/重启，查看软件的状态

=== kill

指令：`kill 进程PID`

与`kill`命令相似但是比kill更加好用的杀死进程的命令：`killall`

指令：`killall 进程名称`

=== ifconfig

指令：`ifconfig`    （获取网卡信息）

image::ifconfig_01.png[]

enp4s0f1: 本机物理网卡

lo：（Loop）本机回环网卡

wlo1：本机无线网卡（其中inet 后面的为IP地址）

=== reboot

指令：`reboot`

作用：重新启动计算机

指令2：`reboot -w`   模拟重启，但是不重启（只写关机与开机的日志信息）

=== shutdown 

指令：`shutdown -h 时间点 `

作用：关机 （慎用）

设置系统关机时间为23:00

image::shutdown_01.png[]

如果想要取消关机计划，则可以按照一下方式去尝试

* 针对CentOS7.x之前的版本：`Ctrl+C`

* 针对CentOS7.x之后的版本：`shutdown -c`

设置系统立马关机：`shutdown -h now`

TIP: 除了shutdown关机以外，还有一下几个命令：`init 0` `halt` `poweroff`

=== uptime

指令：`uptime`

作用：输出计算机的持续在线时间（计算机从开机以来到现在的时间，单位为小时）

image::uptime.png[]

=== uname

指令：`uname 选项`

作用：获取计算机操作系统相关信息

[cols="1,1", options="uname"] 
|===
|*选项*
|*含义*

|-a
|获取计算机全部的系统信息（类型 版本 全部主机名 内核版本 发布时间 开源计划）

|===

=== netstat -tnlp

指令：`netstat -tnlp`

作用：查看网络连接状态

image::netstat.png[]

[cols="1,1", options="netstat""] 
|===
|*选项*
|*含义*

|-t
|表示只列出tcp协议的连接

|-n
|表示将地址从字母组合转化成ip地址，将协议转化成端口号来显示

|-l
|表示过滤出"state（状态）"列中其值为LISTEN（监听）的连接

|-p
|表示显示发起连接的进程PID和进程名称

|===

=== man

指令：`man 命令` 退出按  `q` 键

作用：man（manual） 包含了Linux中全部命令手册 

案例：通过 `man` 命令查询cp指令的用法

image::man.png[]
