<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kubernetes-基础</title>
    <link href="/hexo/2024/09/10/Kubernetes-%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/hexo/2024/09/10/Kubernetes-%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="常见面试问题"><a href="#常见面试问题" class="headerlink" title="常见面试问题"></a>常见面试问题</h1><ol><li>K8S是什么</li></ol><blockquote><p>K8S是一个容器编排的平台,简单来说,就是管理分布在不同主机上的容器,让他们更好的协同工作.</p></blockquote><ol start="2"><li>K8S的优点和缺点</li></ol><p>优点</p><blockquote><ul><li>自愈: 通过探针进行容器健康检查,不满足健康检查条件,自动重启容器.</li><li>服务发现和负载均衡: 使用DNS名称进行负载负载均衡分配网络流量,从而使部署稳定.</li><li>存储编排: 更好的管理本地存储或者公共云提供的存储</li><li>自动部署和回滚: 按照yaml文件中的期望状态进行自动化创建容器,或者通过历史记录进行快速回滚</li><li>自动完成装箱计算: 允许指定每个容器所需的硬件资源(CPU,MEM,GPU),当容器请求资源时,按照预定的资源进行分配</li><li>强大的扩展性: 支持水平和垂直扩展,根据应用需求动态调整资源(日常资源池和弹性资源池)</li><li>高可用和容错性: 部分节点出现故障,容器会被自动调度到正常节点的容器上</li></ul></blockquote><p>缺点</p><blockquote><ul><li>成本刺客: 资源消耗大, k8s需要多组件和多节点运行,资源随着业务的增长会不断的增加,导致成本增加</li><li>简单复杂化: 对于小型网站或公司,如果硬上K8S是完全没有必要的</li></ul></blockquote><ol start="3"><li>Pod Pending状态的原因</li></ol><p><a href="https://cloud.tencent.com/document/product/457/42948">资料参考</a></p><blockquote><ul><li>节点资源不足(PVC未创建等…)</li><li>不满足 nodeSelector 与 affinity</li><li>Node 存在 Pod 没有容忍的污点</li><li>低版本 kube-scheduler 的 bug</li><li>kube-scheduler 未正常运行</li><li>驱逐后其他可用节点与当前节点的有状态应用不在相同可用区</li></ul></blockquote><ol start="4"><li>K8S Pod的启动过程</li></ol><p>client向APIServer发送创建pod的请求：<a href="https://segmentfault.com/a/1190000040817721">资料参考</a></p><blockquote><ol><li>APIServer将pod信息存入etcd，通知Scheduler</li><li>Scheduler根据调度算法，为pod选择一个节点，然后向APIServer发送更新spec.nodeName</li><li>APIServer更新完毕，通知对应节点的kubelet</li><li>kubelet发现pod调度到本节点，创建并运行pod的容器</li></ol></blockquote><ol start="5"><li>K8S 网络模型</li></ol><table><thead><tr><th>对比项</th><th>Terway</th><th>Flannel</th><th>Calico</th></tr></thead><tbody><tr><td>性能</td><td>Pod地址即为VPC中地址,无NAT损耗支持独占ENI模式,几乎无损</td><td>配合阿里云VPC路由,Pod地址为虚拟地址,存在NAT转换损耗</td><td>Calico 使用纯三层路由，不依赖 NAT，支持 BGP 协议，性能较高，但在高流量环境下相对 Terway 可能有一定开销，尤其是在复杂路由场景中</td></tr><tr><td>安全</td><td>支持使用网络策略Network Policy</td><td>不支持使用网络策略Network Policy</td><td>支持使用网络策略Network Policy，并提供高级的网络策略功能，如基于标签的访问控制和细粒度策略管理</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>地址管理</td><td>无需按节点分配地址段,随用随分配,无地址浪费</td><td>节点维度划分地址段,大规模集群下地址浪费多</td><td>使用基于 BGP 路由的三层网络模式，IP 分配相对灵活，但配置复杂度高，在某些场景下可能需要进行子网规划</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>负载均衡</td><td>SLB后端直接对接Pod,支持业务无中断升级</td><td>SLB后端不能直接对接Pod,需要通过NodePort转发</td><td>支持通过 Service 或 Ingress 实现负载均衡，Pod 直接作为负载均衡后端，但由于网络封装（如 VXLAN&#x2F;IPIP）可能带来一定开销</td></tr></tbody></table><ol start="6"><li>K8S 其他面试题</li></ol><p><a href="https://github.com/0voice/k8s_awesome_document/blob/main/91%E9%81%93%E5%B8%B8%E8%A7%81%E7%9A%84Kubernetes%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93.md">资料参考</a></p>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL-常用命令</title>
    <link href="/hexo/2024/08/22/MySQL-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/hexo/2024/08/22/MySQL-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="查看库空间大小"><a href="#查看库空间大小" class="headerlink" title="查看库空间大小"></a>查看库空间大小</h1><div class="code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>TABLE_SCHEMA,concat(<span class="hljs-keyword">truncate</span>(<span class="hljs-built_in">sum</span>(data_length)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27; MB&#x27;</span>) <span class="hljs-keyword">as</span> data_size,concat(<span class="hljs-keyword">truncate</span>(<span class="hljs-built_in">sum</span>(index_length)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;MB&#x27;</span>) <span class="hljs-keyword">as</span> index_size,concat(<span class="hljs-keyword">truncate</span>(<span class="hljs-built_in">sum</span>(data_length<span class="hljs-operator">+</span>index_length)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;GB&#x27;</span>) <span class="hljs-keyword">as</span> 单库总大小<span class="hljs-keyword">from</span> information_schema.tables<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> TABLE_SCHEMA<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> data_size <span class="hljs-keyword">desc</span>;</code></pre></div><h1 id="查看数据库字符集"><a href="#查看数据库字符集" class="headerlink" title="查看数据库字符集"></a>查看数据库字符集</h1><div class="code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> database `hera<span class="hljs-operator">-</span>cdht`;</code></pre></div><div class="code-wrapper"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span>  <span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> database `hera<span class="hljs-operator">-</span>cdht`;<span class="hljs-operator">+</span><span class="hljs-comment">-----------+-------------------------------------------------------------------------------------------------------------------------------------+</span><span class="hljs-operator">|</span> Database  <span class="hljs-operator">|</span> <span class="hljs-keyword">Create</span> Database                                                                                                                     <span class="hljs-operator">|</span><span class="hljs-operator">+</span><span class="hljs-comment">-----------+-------------------------------------------------------------------------------------------------------------------------------------+</span><span class="hljs-operator">|</span> hera<span class="hljs-operator">-</span>cdht <span class="hljs-operator">|</span> <span class="hljs-keyword">CREATE</span> DATABASE `hera<span class="hljs-operator">-</span>cdht` <span class="hljs-comment">/*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */</span> <span class="hljs-comment">/*!80016 DEFAULT ENCRYPTION=&#x27;N&#x27; */</span> <span class="hljs-operator">|</span><span class="hljs-operator">+</span><span class="hljs-comment">-----------+-------------------------------------------------------------------------------------------------------------------------------------+</span><span class="hljs-number">1</span> <span class="hljs-type">row</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.09</span> sec)</code></pre></div><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><div class="code-wrapper"><pre><code class="hljs sql"><span class="hljs-comment">-- 仅创建数据库</span><span class="hljs-keyword">CREATE</span> DATABASE `dev<span class="hljs-operator">-</span>cdht<span class="hljs-operator">-</span>themis`;<span class="hljs-comment">-- 创建数据库并且指定字符集</span><span class="hljs-keyword">CREATE</span> DATABASE `dev<span class="hljs-operator">-</span>cdht<span class="hljs-operator">-</span>themis` <span class="hljs-keyword">DEFAULT</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4 <span class="hljs-keyword">COLLATE</span> utf8mb4_0900_ai_ci;</code></pre></div><h1 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h1><div class="code-wrapper"><pre><code class="hljs sql">use mysql;<span class="hljs-keyword">select</span> host,<span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<span class="hljs-comment">-- 查看指定用户权限</span><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;xxx&#x27;</span>;</code></pre></div><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><div class="code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;finley&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>;</code></pre></div><h1 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h1><div class="code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> `test<span class="hljs-operator">-</span>poseidon`.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;test-poseidon&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-Prometheus监控</title>
    <link href="/hexo/2024/08/07/Kubernetes-Prometheus%E7%9B%91%E6%8E%A7/"/>
    <url>/hexo/2024/08/07/Kubernetes-Prometheus%E7%9B%91%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h1><p>Thanos + Prometheus 高可用</p><h1 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl create ns thanos</code></pre></div><h1 id="安装Prometheus"><a href="#安装Prometheus" class="headerlink" title="安装Prometheus"></a>安装Prometheus</h1><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1beta1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span><span class="hljs-attr">rules:</span><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]  <span class="hljs-attr">resources:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/proxy</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">services</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">endpoints</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span>  <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>]<span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">extensions</span>  <span class="hljs-attr">resources:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">ingresses</span>  <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>]<span class="hljs-bullet">-</span> <span class="hljs-attr">nonResourceURLs:</span> [<span class="hljs-string">&quot;/metrics&quot;</span>]  <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;get&quot;</span>]<span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1beta1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span><span class="hljs-attr">roleRef:</span>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span><span class="hljs-attr">subjects:</span><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus-config</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">data:</span>  <span class="hljs-attr">prometheus.yml:</span> <span class="hljs-string">|</span><span class="hljs-string">    global:</span><span class="hljs-string">      scrape_interval:     15s </span><span class="hljs-string">      evaluation_interval: 15s</span><span class="hljs-string">      external_labels:</span><span class="hljs-string">          k8s_cluster: a-cluster</span><span class="hljs-string">    scrape_configs:</span><span class="hljs-string">      - job_name: &#x27;prometheus&#x27;</span><span class="hljs-string">        static_configs:</span><span class="hljs-string">        - targets: [&#x27;localhost:9090&#x27;]</span><span class="hljs-string">      - job_name: &#x27;node-exporter&#x27;</span><span class="hljs-string">        kubernetes_sd_configs:</span><span class="hljs-string">        - role: node</span><span class="hljs-string">        relabel_configs:</span><span class="hljs-string">        - source_labels: [__address__]</span><span class="hljs-string">          regex: &#x27;(.*):10250&#x27;</span><span class="hljs-string">          replacement: &#x27;$&#123;1&#125;:9100&#x27;</span><span class="hljs-string">          target_label: __address__</span><span class="hljs-string">          action: replace</span><span class="hljs-string">        - source_labels: [__address__]</span><span class="hljs-string">          target_label: instance</span><span class="hljs-string">        - source_labels: [ __address__]</span><span class="hljs-string">          regex: (.*):(.*)</span><span class="hljs-string">          replacement: $&#123;1&#125;</span><span class="hljs-string">          target_label: node</span><span class="hljs-string"></span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometueus-data</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">accessModes:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteMany</span>  <span class="hljs-attr">resources:</span>    <span class="hljs-attr">requests:</span>      <span class="hljs-attr">storage:</span> <span class="hljs-string">10Gi</span>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">nfs-client</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">labels:</span>    <span class="hljs-attr">app:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">matchLabels:</span>      <span class="hljs-attr">app:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">template:</span>    <span class="hljs-attr">metadata:</span>      <span class="hljs-attr">labels:</span>        <span class="hljs-attr">app:</span> <span class="hljs-string">prometheus</span>    <span class="hljs-attr">spec:</span>      <span class="hljs-attr">containers:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">args:</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">sidecar</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--tsdb.path=/prometheus&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--prometheus.url=http://localhost:9090&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--http-address=0.0.0.0:19191&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--grpc-address=0.0.0.0:19091&#x27;</span>          <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;harbor.axzo.cn/library/thanos:latest&#x27;</span>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span>          <span class="hljs-attr">name:</span> <span class="hljs-string">thanos</span>          <span class="hljs-attr">ports:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">19191</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">19091</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>          <span class="hljs-attr">resources:</span>            <span class="hljs-attr">limits:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&#x27;1&#x27;</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">1Gi</span>            <span class="hljs-attr">requests:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">500m</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">1Gi</span>          <span class="hljs-attr">volumeMounts:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/prometheus</span>              <span class="hljs-attr">name:</span> <span class="hljs-string">prometueus-data</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">args:</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--config.file=/etc/prometheus/prometheus.yml&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--storage.tsdb.path=/prometheus&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--storage.tsdb.retention.time=168h&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--web.enable-lifecycle&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--storage.tsdb.no-lockfile&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--web.route-prefix=/&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--web.listen-address=0.0.0.0:9090&#x27;</span>          <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;harbor.axzo.cn/library/prometheus:2.53.1&#x27;</span>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span>          <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>          <span class="hljs-attr">ports:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">9090</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>          <span class="hljs-attr">volumeMounts:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/prometheus</span>              <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus-config</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/prometheus</span>              <span class="hljs-attr">name:</span> <span class="hljs-string">prometueus-data</span>      <span class="hljs-attr">serviceAccount:</span> <span class="hljs-string">prometheus</span>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">prometheus</span>      <span class="hljs-attr">terminationGracePeriodSeconds:</span> <span class="hljs-number">30</span>      <span class="hljs-attr">volumes:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">configMap:</span>            <span class="hljs-attr">defaultMode:</span> <span class="hljs-number">420</span>            <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus-config</span>          <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus-config</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">prometueus-data</span>          <span class="hljs-attr">persistentVolumeClaim:</span>            <span class="hljs-attr">claimName:</span> <span class="hljs-string">prometueus-data</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">labels:</span>    <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">ports:</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">prometheus</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">9090</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">9090</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">thanos-19091</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">19091</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">19091</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">thanos-19191</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">19191</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">19191</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">app:</span> <span class="hljs-string">prometheus</span></code></pre></div><h1 id="安装Node-Exporter"><a href="#安装Node-Exporter" class="headerlink" title="安装Node-Exporter"></a>安装Node-Exporter</h1><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">node-exporter</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">matchLabels:</span>      <span class="hljs-attr">app:</span> <span class="hljs-string">node-exporter</span>  <span class="hljs-attr">template:</span>    <span class="hljs-attr">metadata:</span>      <span class="hljs-attr">labels:</span>        <span class="hljs-attr">app:</span> <span class="hljs-string">node-exporter</span>    <span class="hljs-attr">spec:</span>      <span class="hljs-attr">volumes:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">proc</span>          <span class="hljs-attr">hostPath:</span>            <span class="hljs-attr">path:</span> <span class="hljs-string">/proc</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sys</span>          <span class="hljs-attr">hostPath:</span>            <span class="hljs-attr">path:</span> <span class="hljs-string">/sys</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">host</span>          <span class="hljs-attr">hostPath:</span>            <span class="hljs-attr">path:</span> <span class="hljs-string">/</span>      <span class="hljs-attr">containers:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">node-exporter</span>          <span class="hljs-attr">ports:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">9100</span>          <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.axzo.cn/library/node-exporter:latest</span>          <span class="hljs-attr">args:</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--path.procfs=/host/proc&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--path.sysfs=/host/sys&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--path.rootfs=/host&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.arp&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.bcache&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.bonding&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.buddyinfo&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.conntrack&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.cpu&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.diskstats&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.drbd&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.edac&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.entropy&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.filefd&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.filesystem&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.hwmon&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.infiniband&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.interrupts&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.ipvs&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.ksmd&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.loadavg&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.logind&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.mdadm&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.meminfo&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.meminfo_numa&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.mountstats&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.netdev&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.netstat&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.nfs&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.nfsd&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.ntp&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.processes&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.qdisc&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.runit&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.sockstat&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.stat&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.supervisord&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.systemd&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.tcpstat&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.textfile&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.time&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.timex&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.uname&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.vmstat&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--no-collector.wifi&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.xfs&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--collector.zfs&#x27;</span>          <span class="hljs-attr">resources:</span>            <span class="hljs-attr">limits:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">200m</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">200Mi</span>            <span class="hljs-attr">requests:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">100m</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">30Mi</span>          <span class="hljs-attr">volumeMounts:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">proc</span>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/proc</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sys</span>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/sys</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">host</span>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host</span>      <span class="hljs-attr">nodeSelector:</span>        <span class="hljs-attr">kubernetes.io/os:</span> <span class="hljs-string">linux</span>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">hostPID:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">securityContext:</span>        <span class="hljs-attr">runAsUser:</span> <span class="hljs-number">65534</span>        <span class="hljs-attr">runAsNonRoot:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">tolerations:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span></code></pre></div><h1 id="安装Thanos"><a href="#安装Thanos" class="headerlink" title="安装Thanos"></a>安装Thanos</h1><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">thanos-query</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">thanos</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">matchLabels:</span>      <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">thanos-query</span>  <span class="hljs-attr">template:</span>    <span class="hljs-attr">metadata:</span>      <span class="hljs-attr">labels:</span>        <span class="hljs-attr">app.kubernetes.io/name:</span> <span class="hljs-string">thanos-query</span>    <span class="hljs-attr">spec:</span>      <span class="hljs-attr">containers:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">args:</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">query</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--grpc-address=0.0.0.0:19091&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--http-address=0.0.0.0:9090&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--log.level=info&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--log.format=logfmt&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--endpoint=prometheus:19091&#x27;</span>            <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;--query.auto-downsampling&#x27;</span>          <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;harbor.axzo.cn/library/thanos:latest&#x27;</span>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span>          <span class="hljs-attr">livenessProbe:</span>            <span class="hljs-attr">failureThreshold:</span> <span class="hljs-number">4</span>            <span class="hljs-attr">httpGet:</span>              <span class="hljs-attr">path:</span> <span class="hljs-string">/-/healthy</span>              <span class="hljs-attr">port:</span> <span class="hljs-number">9090</span>              <span class="hljs-attr">scheme:</span> <span class="hljs-string">HTTP</span>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">30</span>            <span class="hljs-attr">successThreshold:</span> <span class="hljs-number">1</span>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">1</span>          <span class="hljs-attr">name:</span> <span class="hljs-string">thanos-query</span>          <span class="hljs-attr">readinessProbe:</span>            <span class="hljs-attr">failureThreshold:</span> <span class="hljs-number">20</span>            <span class="hljs-attr">httpGet:</span>              <span class="hljs-attr">path:</span> <span class="hljs-string">/-/ready</span>              <span class="hljs-attr">port:</span> <span class="hljs-number">9090</span>              <span class="hljs-attr">scheme:</span> <span class="hljs-string">HTTP</span>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">5</span>            <span class="hljs-attr">successThreshold:</span> <span class="hljs-number">1</span>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">1</span>          <span class="hljs-attr">resources:</span>            <span class="hljs-attr">limits:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&#x27;4&#x27;</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">4Gi</span>            <span class="hljs-attr">requests:</span>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&#x27;2&#x27;</span>              <span class="hljs-attr">memory:</span> <span class="hljs-string">4Gi</span>      <span class="hljs-attr">imagePullSecrets:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">harbor</span>      <span class="hljs-attr">nodeSelector:</span>        <span class="hljs-attr">kubernetes.io/os:</span> <span class="hljs-string">linux</span>      <span class="hljs-attr">securityContext:</span>        <span class="hljs-attr">fsGroup:</span> <span class="hljs-number">65534</span>        <span class="hljs-attr">runAsUser:</span> <span class="hljs-number">65534</span>      <span class="hljs-attr">terminationGracePeriodSeconds:</span> <span class="hljs-number">120</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Prometheus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubectl-常用命令</title>
    <link href="/hexo/2024/08/06/Kubectl-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/hexo/2024/08/06/Kubectl-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h2><div class="code-wrapper"><pre><code class="hljs bash">yum install -y bash-completion<span class="hljs-built_in">source</span> /usr/share/bash-completion/bash_completion<span class="hljs-built_in">source</span> &lt;(kubectl completion bash)<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source &lt;(kubectl completion bash)&quot;</span> &gt;&gt; ~/.bashrc<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias k=kubectl&quot;</span> &gt;&gt; ~/.bashrc<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;complete -o default -F __start_kubectl k&quot;</span> &gt;&gt; ~/.bashrc</code></pre></div><h2 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl create secret tls api-cdht-https --cert api-cdht.cdhtgycs.cn.pem --key api-cdht.cdhtgycs.cn.key -n prod</code></pre></div><h2 id="扩缩容"><a href="#扩缩容" class="headerlink" title="扩缩容"></a>扩缩容</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl scale deployment foo --replicas=0</code></pre></div><h2 id="创建ServiceAccount并绑定Secret"><a href="#创建ServiceAccount并绑定Secret" class="headerlink" title="创建ServiceAccount并绑定Secret"></a>创建ServiceAccount并绑定Secret</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f &lt;&lt;<span class="hljs-string">EOF -</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">automountServiceAccountToken: true</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">secrets:</span><span class="hljs-string">- name: jenkins-blue</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Secret</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    kubernetes.io/service-account.name: &quot;jenkins-blue&quot;</span><span class="hljs-string">type: kubernetes.io/service-account-token</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubectl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubectl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-常用YAML</title>
    <link href="/hexo/2024/08/04/Kubernetes-%E5%B8%B8%E7%94%A8yaml/"/>
    <url>/hexo/2024/08/04/Kubernetes-%E5%B8%B8%E7%94%A8yaml/</url>
    
    <content type="html"><![CDATA[<h1 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h1><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: Deployment</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 1</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: logstash-os</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: logstash-os</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: config-volume</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.yml</span><span class="hljs-string">                path: logstash.yml</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: logstash-pipeline</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.conf</span><span class="hljs-string">                path: logstash.conf</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: localtime</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /etc/localtime</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: logstash</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/ops/logstash:7.14.0&#x27;</span><span class="hljs-string">          resources:</span><span class="hljs-string">            limits:</span><span class="hljs-string">              cpu: &#x27;1&#x27;</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">            requests:</span><span class="hljs-string">              cpu: 500m</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: config-volume</span><span class="hljs-string">              mountPath: /usr/share/logstash/config</span><span class="hljs-string">            - name: logstash-pipeline</span><span class="hljs-string">              mountPath: /usr/share/logstash/pipeline</span><span class="hljs-string">            - name: localtime</span><span class="hljs-string">              mountPath: /etc/localtime</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 30</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      securityContext: &#123;&#125;</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">  strategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">    rollingUpdate:</span><span class="hljs-string">      maxUnavailable: 25%</span><span class="hljs-string">      maxSurge: 25%</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">  progressDeadlineSeconds: 600</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os-configmap</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">data:</span><span class="hljs-string">  logstash.conf: |</span><span class="hljs-string">    input&#123;</span><span class="hljs-string">      kafka&#123;</span><span class="hljs-string">        bootstrap_servers =&gt; &quot;192.168.1.9:9091,192.168.1.9:9092,192.168.1.9:9093&quot;</span><span class="hljs-string">        topics =&gt; [&quot;os-secure-logs&quot;, &quot;os-messages-logs&quot;]</span><span class="hljs-string">        consumer_threads =&gt; 1</span><span class="hljs-string">        decorate_events =&gt; true</span><span class="hljs-string">        codec =&gt; json</span><span class="hljs-string">        auto_offset_reset =&gt; &quot;latest&quot;</span><span class="hljs-string">     &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">    filter&#123;</span><span class="hljs-string">      ruby &#123; </span><span class="hljs-string">              code =&gt; &quot;event.set(&#x27;timestamp&#x27;, event.get(&#x27;@timestamp&#x27;).time.localtime - 8*60*60)&quot; </span><span class="hljs-string">          &#125;</span><span class="hljs-string">        mutate &#123;</span><span class="hljs-string">            remove_field =&gt; [&quot;@version&quot;, &quot;@timestamp&quot;]</span><span class="hljs-string">        &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">    output &#123;</span><span class="hljs-string">      stdout &#123; </span><span class="hljs-string">         codec  =&gt; rubydebug &#123;</span><span class="hljs-string">           metadata =&gt; true</span><span class="hljs-string">         &#125;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">      if &quot;os-secure-logs&quot; == [@metadata][kafka][topic] &#123;</span><span class="hljs-string">        elasticsearch &#123;</span><span class="hljs-string">          hosts =&gt; [&quot;192.168.1.65:9200&quot;,&quot;192.168.1.150:9200&quot;,&quot;192.168.1.32:9200&quot;,&quot;192.168.1.44:9200&quot;,&quot;192.168.1.89:9200&quot;]</span><span class="hljs-string">          user =&gt; &quot;elastic&quot;</span><span class="hljs-string">          password =&gt; &quot;axzo@2021&quot;</span><span class="hljs-string">          index =&gt; &quot;logstash-os-secure-%&#123;+YYYY.MM.dd&#125;&quot;</span><span class="hljs-string">        &#125;</span><span class="hljs-string">      &#125; else &#123;</span><span class="hljs-string">        elasticsearch &#123;</span><span class="hljs-string">          hosts =&gt; [&quot;192.168.1.65:9200&quot;,&quot;192.168.1.150:9200&quot;,&quot;192.168.1.32:9200&quot;,&quot;192.168.1.44:9200&quot;,&quot;192.168.1.89:9200&quot;]</span><span class="hljs-string">          user =&gt; &quot;elastic&quot;</span><span class="hljs-string">          password =&gt; &quot;axzo@2021&quot;</span><span class="hljs-string">          index =&gt; &quot;logstash-os-messages-%&#123;+YYYY.MM.dd&#125;&quot;</span><span class="hljs-string">        &#125;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">  logstash.yml: |</span><span class="hljs-string">    http.host: &quot;0.0.0.0&quot;</span><span class="hljs-string">    path.config: /usr/share/logstash/pipeline</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="PVC"><a href="#PVC" class="headerlink" title="PVC"></a>PVC</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: PersistentVolumeClaim</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: pro-apisix-plugins</span><span class="hljs-string">  namespace: pro-apisix</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner</span><span class="hljs-string">spec:</span><span class="hljs-string">  accessModes:</span><span class="hljs-string">    - ReadWriteMany</span><span class="hljs-string">  resources:</span><span class="hljs-string">    requests:</span><span class="hljs-string">      storage: 2Gi</span><span class="hljs-string">  storageClassName: sfsturbo-k8s-sc</span><span class="hljs-string">  volumeMode: Filesystem</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="NFS-server"><a href="#NFS-server" class="headerlink" title="NFS-server"></a>NFS-server</h1><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Namespace</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">labels:</span>    <span class="hljs-attr">kubernetes.io/metadata.name:</span> <span class="hljs-string">storage</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">storage</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">data:</span>  <span class="hljs-attr">exports:</span> <span class="hljs-string">&#x27;/data/nfs *(rw,fsid=0,insecure,no_root_squash)&#x27;</span><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server-conf</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">storage</span><span class="hljs-meta">---</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">storage</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">matchLabels:</span>      <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-server</span>  <span class="hljs-attr">template:</span>    <span class="hljs-attr">metadata:</span>      <span class="hljs-attr">labels:</span>        <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-server</span>    <span class="hljs-attr">spec:</span>      <span class="hljs-attr">volumes:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server-conf</span>          <span class="hljs-attr">configMap:</span>            <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server-conf</span>            <span class="hljs-attr">defaultMode:</span> <span class="hljs-number">420</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-data</span>          <span class="hljs-attr">persistentVolumeClaim:</span>            <span class="hljs-attr">claimName:</span> <span class="hljs-string">nfs-data</span>      <span class="hljs-attr">containers:</span>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server</span>          <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.axzo.cn/library/nfs-server:v1</span>          <span class="hljs-attr">ports:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs</span>              <span class="hljs-attr">containerPort:</span> <span class="hljs-number">2049</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">mountd</span>              <span class="hljs-attr">containerPort:</span> <span class="hljs-number">20048</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">rpcbind</span>              <span class="hljs-attr">containerPort:</span> <span class="hljs-number">111</span>              <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>          <span class="hljs-attr">volumeMounts:</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-server-conf</span>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/exports</span>              <span class="hljs-attr">subPath:</span> <span class="hljs-string">exports</span>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/data/nfs</span>              <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-data</span>          <span class="hljs-attr">terminationMessagePath:</span> <span class="hljs-string">/dev/termination-log</span>          <span class="hljs-attr">terminationMessagePolicy:</span> <span class="hljs-string">File</span>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span>          <span class="hljs-attr">securityContext:</span>            <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Always</span>      <span class="hljs-attr">terminationGracePeriodSeconds:</span> <span class="hljs-number">30</span>      <span class="hljs-attr">dnsPolicy:</span> <span class="hljs-string">ClusterFirst</span>  <span class="hljs-attr">strategy:</span>    <span class="hljs-attr">type:</span> <span class="hljs-string">RollingUpdate</span>    <span class="hljs-attr">rollingUpdate:</span>      <span class="hljs-attr">maxUnavailable:</span> <span class="hljs-number">25</span><span class="hljs-string">%</span>      <span class="hljs-attr">maxSurge:</span> <span class="hljs-number">25</span><span class="hljs-string">%</span>  <span class="hljs-attr">revisionHistoryLimit:</span> <span class="hljs-number">10</span>  <span class="hljs-attr">progressDeadlineSeconds:</span> <span class="hljs-number">600</span><span class="hljs-meta">---</span><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><span class="hljs-attr">metadata:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">nfs-service</span>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">storage</span><span class="hljs-attr">spec:</span>  <span class="hljs-attr">ports:</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nfs</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">2049</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">2049</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">mountd</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">20048</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">20048</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">rpcbind</span>      <span class="hljs-attr">port:</span> <span class="hljs-number">111</span>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">111</span>  <span class="hljs-attr">selector:</span>    <span class="hljs-attr">app:</span> <span class="hljs-string">nfs-server</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-常用Shell命令</title>
    <link href="/hexo/2024/08/04/Linux-%E5%B8%B8%E7%94%A8Shell%E5%91%BD%E4%BB%A4/"/>
    <url>/hexo/2024/08/04/Linux-%E5%B8%B8%E7%94%A8Shell%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="批量删除指定状态的pods"><a href="#批量删除指定状态的pods" class="headerlink" title="批量删除指定状态的pods"></a>批量删除指定状态的pods</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl --kubeconfig gxq-config get pods -A|grep Evicted|awk <span class="hljs-string">&#x27;&#123;print $1&quot; &quot;$2&#125;&#x27;</span>|<span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> LINE<span class="hljs-keyword">do</span>    namespace=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$LINE</span>|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`    pod=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$LINE</span>|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`    kubectl --kubeconfig gxq-config delete pod -n <span class="hljs-variable">$namespace</span> <span class="hljs-variable">$pod</span><span class="hljs-keyword">done</span></code></pre></div><h1 id="阿里云增加DNS解析"><a href="#阿里云增加DNS解析" class="headerlink" title="阿里云增加DNS解析"></a>阿里云增加DNS解析</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># A记录</span>aliyun alidns AddDomainRecord --region cn-beijing --DomainName <span class="hljs-string">&#x27;xx.cn&#x27;</span> --Type A --RR <span class="hljs-string">&#x27;www&#x27;</span> --Value <span class="hljs-string">&#x27;1.1.1.1&#x27;</span><span class="hljs-comment"># CNAME</span>aliyun alidns AddDomainRecord --region cn-beijing --DomainName <span class="hljs-string">&#x27;xx.cn&#x27;</span> --Type CNAME --RR <span class="hljs-string">&#x27;xxx&#x27;</span> --Value <span class="hljs-string">&#x27;bbb.yy.cn&#x27;</span></code></pre></div><h1 id="删除指定日期的文件夹"><a href="#删除指定日期的文件夹" class="headerlink" title="删除指定日期的文件夹"></a>删除指定日期的文件夹</h1><div class="code-wrapper"><pre><code class="hljs bash">find /path/to/directory -<span class="hljs-built_in">type</span> f -mtime +7 -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">rm</span> -rf &#123;&#125; \;</code></pre></div><h1 id="安装Node-Expoter"><a href="#安装Node-Expoter" class="headerlink" title="安装Node Expoter"></a>安装Node Expoter</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 一句话安装</span>curl http://47.109.36.211:9090/install_node_expoter.sh | bash</code></pre></div><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><span class="hljs-built_in">set</span> -e  <span class="hljs-comment"># Exit immediately if a command exits with a non-zero status</span><span class="hljs-comment"># Define variables</span>DOWNLOAD_URL=<span class="hljs-string">&quot;http://47.109.36.211:9090/node_exporter-1.8.2.linux-amd64.tar.gz&quot;</span>DOWNLOAD_DIR=<span class="hljs-string">&quot;/tmp/downloads&quot;</span>INSTALL_DIR=<span class="hljs-string">&quot;/opt/node_exporter&quot;</span>SERVICE_FILE=<span class="hljs-string">&quot;/etc/systemd/system/node_exporter.service&quot;</span>LOCK_FILE=<span class="hljs-string">&quot;/root/.node_exporter_install.lock&quot;</span><span class="hljs-comment"># Check if the lock file exists</span><span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$LOCK_FILE</span> ]; <span class="hljs-keyword">then</span>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Node Exporter is already installed. Exiting.&quot;</span>  <span class="hljs-built_in">exit</span> 0<span class="hljs-keyword">fi</span><span class="hljs-comment"># Create necessary directories</span><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$DOWNLOAD_DIR</span> <span class="hljs-variable">$INSTALL_DIR</span><span class="hljs-comment"># Download and extract node_exporter</span>wget <span class="hljs-variable">$DOWNLOAD_URL</span> -O <span class="hljs-variable">$DOWNLOAD_DIR</span>/node_exporter.tar.gztar xf <span class="hljs-variable">$DOWNLOAD_DIR</span>/node_exporter.tar.gz -C <span class="hljs-variable">$DOWNLOAD_DIR</span><span class="hljs-built_in">mv</span> <span class="hljs-variable">$DOWNLOAD_DIR</span>/node_exporter-*/node_exporter <span class="hljs-variable">$INSTALL_DIR</span>/<span class="hljs-built_in">rm</span> -rf <span class="hljs-variable">$DOWNLOAD_DIR</span>/node_exporter*<span class="hljs-comment"># Create systemd service file</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; $SERVICE_FILE</span><span class="hljs-string">[Unit]</span><span class="hljs-string">Description=Prometheus Node Exporter</span><span class="hljs-string">Documentation=https://github.com/prometheus/node_exporter</span><span class="hljs-string">After=network-online.target</span><span class="hljs-string"></span><span class="hljs-string">[Service]</span><span class="hljs-string">User=root</span><span class="hljs-string">ExecStart=$INSTALL_DIR/node_exporter</span><span class="hljs-string">Restart=on-failure</span><span class="hljs-string">RestartSec=5</span><span class="hljs-string"></span><span class="hljs-string">[Install]</span><span class="hljs-string">WantedBy=multi-user.target</span><span class="hljs-string">EOF</span><span class="hljs-comment"># Reload systemd configuration and start the service</span>systemctl daemon-reloadsystemctl <span class="hljs-built_in">enable</span> --now node_exporter<span class="hljs-comment"># Create lock file</span><span class="hljs-built_in">touch</span> <span class="hljs-variable">$LOCK_FILE</span><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Node Exporter installation and configuration completed&quot;</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Thesuns-安装</title>
    <link href="/hexo/2024/07/26/Thesuns-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/07/26/Thesuns-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><div class="code-wrapper"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/starsliao/TenSunS/main/install/k8s/install.sh | bash</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Thesuns</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Thesuns</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jenkins-安装</title>
    <link href="/hexo/2024/07/22/Jenkins-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/07/22/Jenkins-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="创建Role-RoleBinding"><a href="#创建Role-RoleBinding" class="headerlink" title="创建Role RoleBinding"></a>创建Role RoleBinding</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: RoleBinding</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">roleRef:</span><span class="hljs-string">  apiGroup: rbac.authorization.k8s.io</span><span class="hljs-string">  kind: Role</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">subjects:</span><span class="hljs-string">- kind: ServiceAccount</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: Role</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">rules:</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - extensions</span><span class="hljs-string">  - apps</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - deployments</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - create</span><span class="hljs-string">  - delete</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - watch</span><span class="hljs-string">  - patch</span><span class="hljs-string">  - update</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - services</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - create</span><span class="hljs-string">  - delete</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - watch</span><span class="hljs-string">  - patch</span><span class="hljs-string">  - update</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - pods</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - create</span><span class="hljs-string">  - delete</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - patch</span><span class="hljs-string">  - update</span><span class="hljs-string">  - watch</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - pods/exec</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - create</span><span class="hljs-string">  - delete</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - patch</span><span class="hljs-string">  - update</span><span class="hljs-string">  - watch</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - pods/log</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - watch</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - secrets</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - get</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="创建serviceAccount-并创建sa的sercret"><a href="#创建serviceAccount-并创建sa的sercret" class="headerlink" title="创建serviceAccount,并创建sa的sercret"></a>创建serviceAccount,并创建sa的sercret</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">automountServiceAccountToken: true</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">secrets:</span><span class="hljs-string">- name: jenkins-blue</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Secret</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-blue</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    kubernetes.io/service-account.name: &quot;jenkins-blue&quot;</span><span class="hljs-string">type: kubernetes.io/service-account-token</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="创建configmaps"><a href="#创建configmaps" class="headerlink" title="创建configmaps"></a>创建configmaps</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">data:</span><span class="hljs-string">  addJavaAppStart.sh: &gt;</span><span class="hljs-string">    #!/bin/sh</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;获取包依赖关系： &quot;</span><span class="hljs-string"></span><span class="hljs-string">    mvn dependency:tree -D outputFile=/pipeline-stage-share/dependency_tree.txt</span><span class="hljs-string">    -D outputType=dot -D includes=cn.axzo.*</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    echo &#x27; </span><span class="hljs-string"></span><span class="hljs-string">    #!/bin/bash</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # Copyright 2019-2039 AXZO Co. Ltd.</span><span class="hljs-string"></span><span class="hljs-string">    # Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><span class="hljs-string"></span><span class="hljs-string">    # you may not use this file except in compliance with the License.</span><span class="hljs-string"></span><span class="hljs-string">    # You may obtain a copy of the License at</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    #      http://www.apache.org/licenses/LICENSE-2.0</span><span class="hljs-string"></span><span class="hljs-string">    #</span><span class="hljs-string"></span><span class="hljs-string">    # Unless required by applicable law or agreed to in writing, software</span><span class="hljs-string"></span><span class="hljs-string">    # distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><span class="hljs-string"></span><span class="hljs-string">    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><span class="hljs-string"></span><span class="hljs-string">    # See the License for the specific language governing permissions and</span><span class="hljs-string"></span><span class="hljs-string">    # limitations under the License.</span><span class="hljs-string"></span><span class="hljs-string">    artifact=\$1</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    if [[ \$# -le 0 ]]; then</span><span class="hljs-string">      echo &quot;Usage: \$0 example.jar&quot;</span><span class="hljs-string">      exit 255</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    readonly megabytes=1048576</span><span class="hljs-string"></span><span class="hljs-string">    # shellcheck disable=SC2004</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # jvm堆内存占容器内存上限的比例, 如果没有设置, 则默认为60%</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;JVM_MEM_PERCENT&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      JVM_MEM_PERCENT=&quot;60&quot;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # jvm堆内存数值计算, 如果容器内存上限没有设置, 则堆内存直接设置为1024m</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;MY_MEMORY_LIMIT&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      heapmem=&quot;1024m&quot;</span><span class="hljs-string">    else</span><span class="hljs-string">      heapmem=\$(printf &quot;%sm&quot; \$(((\$MY_MEMORY_LIMIT / \$megabytes) * \$JVM_MEM_PERCENT / 100)))</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # jvm堆内存精细化设置, 会覆盖前面的jvm堆内存设置, 并添加非堆内存的设置</span><span class="hljs-string"></span><span class="hljs-string">    if [ x&quot;\$&#123;JVM_MEM_HEAP&#125;&quot; != x ]; then</span><span class="hljs-string">      heapmem=\$&#123;JVM_MEM_HEAP&#125;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;JVM_MEM_DIRECT&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      directmem=&quot;512m&quot;</span><span class="hljs-string">    else</span><span class="hljs-string">      directmem=\$&#123;JVM_MEM_DIRECT&#125;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;JVM_MEM_METASPACE&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      metaspacemem=&quot;512m&quot;</span><span class="hljs-string">    else</span><span class="hljs-string">      metaspacemem=\$&#123;JVM_MEM_METASPACE&#125;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;JVM_OCCUPANCY_PERCENT&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      jvm_occupancy_percent=&quot;50&quot;</span><span class="hljs-string">    else</span><span class="hljs-string">      jvm_occupancy_percent=\$&#123;JVM_OCCUPANCY_PERCENT&#125;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;JVM_NEWSIZE_PERCENT&#125;&quot; == &quot;&quot; ]; then</span><span class="hljs-string">      jvm_newsize_percent=&quot;60&quot;</span><span class="hljs-string">    else</span><span class="hljs-string">      jvm_newsize_percent=\$&#123;JVM_NEWSIZE_PERCENT&#125;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    export COLLECTOR=&quot;-XX:+UseG1GC -XX:ConcGCThreads=4</span><span class="hljs-string">    -XX:+UnlockExperimentalVMOptions</span><span class="hljs-string">    -XX:G1MaxNewSizePercent=\$&#123;jvm_newsize_percent&#125;</span><span class="hljs-string">    -XX:InitiatingHeapOccupancyPercent=\$&#123;jvm_occupancy_percent&#125;</span><span class="hljs-string">    -XX:G1HeapRegionSize=4M -XX:MaxTenuringThreshold=15 -XX:ParallelGCThreads=8&quot;</span><span class="hljs-string"></span><span class="hljs-string">    export LOGGER=&quot;-Xloggc:/tmp/gc.log -XX:+PrintGCDetails</span><span class="hljs-string">    -XX:+PrintGCDateStamps&quot;</span><span class="hljs-string"></span><span class="hljs-string">    export HEAP=&quot;-Xmx\$&#123;heapmem&#125; -Xms\$&#123;heapmem&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    export NON_HEAP=&quot;-XX:MaxDirectMemorySize=\$&#123;directmem&#125;</span><span class="hljs-string">    -XX:MaxMetaspaceSize=\$&#123;metaspacemem&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    export DUMP=&quot;-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/dump/&quot;</span><span class="hljs-string"></span><span class="hljs-string">    export MON=&quot;-XX:NativeMemoryTracking=detail&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_HEAP:-\$&#123;HEAP&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_NON_HEAP:-\$&#123;NON_HEAP&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_GC:-\$&#123;COLLECTOR&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_LOGS:-\$&#123;LOGGER&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_DUMP:-\$&#123;DUMP&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JAVA_MON:-\$&#123;MON&#125;&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # prometheus jmx agent加载, 主动开启才加载，默认不加载</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;PROMETHEUS_JMX_AGENT&#125;&quot; == &quot;true&quot; ]; then</span><span class="hljs-string">      JAVA_OPTS=&quot;\$JAVA_OPTS -javaagent:/mnt/jvm-agent/prometheus-javaagent/jmx_prometheus_javaagent-0.20.0.jar=12345:/mnt/jvm-agent/prometheus-javaagent/config.yaml&quot;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # tingyun agent加载, 主动开启才加载，默认不加载</span><span class="hljs-string"></span><span class="hljs-string">    if [ &quot;\$&#123;TINGYUN_JMX_AGENT&#125;&quot; == &quot;true&quot; ]; then</span><span class="hljs-string">      JAVA_OPTS=&quot;\$JAVA_OPTS -javaagent:/mnt/skywalking-es7/agent/tingyun/tingyun-agent-java.jar -Dtingyun.app_name=\$&#123;MY_PROJECT_NAME&#125;&quot;</span><span class="hljs-string">    fi</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # 其他JVM_AGENT设置, 可能会与前面的agent设置重复</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JVM_AGENT&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # 其他JVM追加设置, 可能会与前面的设置重复</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS \$&#123;JVM_EXT_ARG&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # 其他固定的JAVA_OPTS</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS -Dfile.encoding=UTF-8 -Duser.timezone=Asia/Shanghai&quot;</span><span class="hljs-string"></span><span class="hljs-string">    JAVA_OPTS=&quot;\$JAVA_OPTS -jar \$&#123;artifact&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;starting appliction \$&#123;artifact%????&#125;&quot;</span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;running command: java \$JAVA_OPTS&quot;</span><span class="hljs-string"></span><span class="hljs-string">    eval &quot;exec java \$JAVA_OPTS&quot;</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    &#x27; &gt; axzo_java_app_startup.sh</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    JarFile=`echo \$&#123;ENTRYPOINT&#125; | awk -F , &#x27;&#123;print \$NF&#125;&#x27;`</span><span class="hljs-string"></span><span class="hljs-string">    JarFile=`echo \$&#123;JarFile&#125; | sed &#x27;s/&quot;//g&#x27;`</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;\n&quot; &gt;&gt; Dockerfile</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # 注入MY_PROJECT_NAME环境变量</span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;env MY_PROJECT_NAME \$&#123;ProjectName&#125;&quot; &gt;&gt; Dockerfile</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # 注入启动脚本并使用此脚本为容器启动脚本，覆盖Dockerfile中原有的ENTRYPOINT</span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;ADD axzo_java_app_startup.sh /axzo_java_app_startup.sh&quot; &gt;&gt; Dockerfile</span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;ADD dependency_tree.txt /dependency_tree.txt&quot; &gt;&gt; Dockerfile</span><span class="hljs-string"></span><span class="hljs-string">    echo &quot;ENTRYPOINT sh /axzo_java_app_startup.sh \$&#123;JarFile&#125;&quot; &gt;&gt; Dockerfile</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    cat Dockerfile</span><span class="hljs-string">  mvDockerBuildDep.py: |-</span><span class="hljs-string">    #! /usr/bin/env python</span><span class="hljs-string">    # -*- coding: utf-8 -*-</span><span class="hljs-string">    import sys</span><span class="hljs-string">    import subprocess</span><span class="hljs-string">    import os</span><span class="hljs-string">    import re</span><span class="hljs-string">    import json</span><span class="hljs-string">    import requests</span><span class="hljs-string">    import hashlib</span><span class="hljs-string"></span><span class="hljs-string">    def runCommand(commandStr):</span><span class="hljs-string">        r = subprocess.getstatusoutput(commandStr)</span><span class="hljs-string">        if r[0] == 0:</span><span class="hljs-string">            print(r[1])</span><span class="hljs-string">            return r[1]</span><span class="hljs-string">        else:</span><span class="hljs-string">            print(r[1])</span><span class="hljs-string">            return False</span><span class="hljs-string"></span><span class="hljs-string">    if not os.path.exists(&quot;Dockerfile&quot;):</span><span class="hljs-string">        print(&quot;No Dockerfile found,quit.&quot;)</span><span class="hljs-string">        sys.exit(0)</span><span class="hljs-string">    if not os.path.exists(&quot;dockerBuildOnly&quot;):</span><span class="hljs-string">        os.mkdir(&quot;dockerBuildOnly&quot;)</span><span class="hljs-string"></span><span class="hljs-string">    # java类应用计算包依赖</span><span class="hljs-string">    axzoDepList = []</span><span class="hljs-string">    if os.path.exists(&quot;/pipeline-stage-share/dependency_tree.txt&quot;):</span><span class="hljs-string">        for line in open(&quot;/pipeline-stage-share/dependency_tree.txt&quot;,&quot;r&quot;):</span><span class="hljs-string">            try:</span><span class="hljs-string">                if re.search(&quot; -&gt; &quot;,line):</span><span class="hljs-string">                    depLeftGroupId = line.strip().split(&quot; -&gt; &quot;)[0].split(&quot;\&quot;&quot;)[1].split(&quot;:&quot;)[0]</span><span class="hljs-string">                    depLeftArtifactId = line.strip().split(&quot; -&gt; &quot;)[0].split(&quot;\&quot;&quot;)[1].split(&quot;:&quot;)[1]</span><span class="hljs-string"></span><span class="hljs-string">                    depRightGroupId = line.strip().split(&quot; -&gt; &quot;)[1].split(&quot;\&quot;&quot;)[1].split(&quot;:&quot;)[0]</span><span class="hljs-string">                    depRightArtifactId = line.strip().split(&quot; -&gt; &quot;)[1].split(&quot;\&quot;&quot;)[1].split(&quot;:&quot;)[1]</span><span class="hljs-string">                    </span><span class="hljs-string">                    if depLeftGroupId.startswith(&quot;cn.axzo&quot;) and depRightGroupId.startswith(&quot;cn.axzo&quot;):</span><span class="hljs-string">                        #print(line.strip())</span><span class="hljs-string"></span><span class="hljs-string">                        depRight = &quot;&#123;&#125;:&#123;&#125;&quot;.format(depRightGroupId,depRightArtifactId)</span><span class="hljs-string">                        # print(depRight)</span><span class="hljs-string">                        if depRight not in axzoDepList:</span><span class="hljs-string">                            axzoDepList.append(depRight)      </span><span class="hljs-string">            except:</span><span class="hljs-string">                continue</span><span class="hljs-string"></span><span class="hljs-string">    # 查询依赖包的版本信息</span><span class="hljs-string">    with open(&quot;/pipeline-stage-share/dependency_tree.txt&quot;,&quot;w+&quot;) as f:</span><span class="hljs-string">        for axzoDep in axzoDepList:</span><span class="hljs-string">            if os.getenv(&quot;targetEnv&quot;) in [&quot;axzo-pro&quot;,&quot;axzo-live&quot;] or os.getenv(&quot;targetEnv&quot;).endswith(&quot;-prod&quot;):</span><span class="hljs-string">                repository = &quot;axzo-master&quot;</span><span class="hljs-string">            else:</span><span class="hljs-string">                repository = os.getenv(&quot;targetEnv&quot;)</span><span class="hljs-string">            url = &quot;https://nexus.axzo.cn/service/rest/v1/search?repository=&#123;&#125;&amp;group=&#123;&#125;&amp;name=&#123;&#125;&amp;sort=version&amp;direction=desc&quot;.format(repository,axzoDep.split(&quot;:&quot;)[0],axzoDep.split(&quot;:&quot;)[1])</span><span class="hljs-string">            headers = &#123;</span><span class="hljs-string">                &#x27;content-type&#x27;: &#x27;application/json&#x27;,</span><span class="hljs-string">                &#x27;Accept&#x27;: &#x27;application/json;charset=utf-8&#x27;</span><span class="hljs-string">            &#125;</span><span class="hljs-string">            try:</span><span class="hljs-string">                r = requests.get(url=url, headers=headers)</span><span class="hljs-string">                # print(r.text)</span><span class="hljs-string">                r_json = json.loads(r.text)</span><span class="hljs-string">                for i in r_json[&quot;items&quot;]:</span><span class="hljs-string">                    print(&quot;&#123;&#125;.&#123;&#125;: &#123;&#125;&quot;.format(axzoDep.split(&quot;:&quot;)[0],axzoDep.split(&quot;:&quot;)[1],i[&quot;version&quot;]))</span><span class="hljs-string">                    f.write(&quot;&#123;&#125;.&#123;&#125;: &#123;&#125;\n&quot;.format(axzoDep.split(&quot;:&quot;)[0],axzoDep.split(&quot;:&quot;)[1],i[&quot;version&quot;]))</span><span class="hljs-string">                    f.flush()</span><span class="hljs-string">                    break</span><span class="hljs-string">            except:</span><span class="hljs-string">                # traceback.print_exc()</span><span class="hljs-string">                continue</span><span class="hljs-string"></span><span class="hljs-string">    # 计算依赖清单md5值</span><span class="hljs-string">    if os.path.exists(&quot;/pipeline-stage-share/dependency_tree.txt&quot;):</span><span class="hljs-string">        with open(&quot;/pipeline-stage-share/dependency_tree.txt&quot;, &#x27;rb&#x27;) as fp:</span><span class="hljs-string">            data = fp.read()</span><span class="hljs-string">        file_md5= hashlib.md5(data).hexdigest()</span><span class="hljs-string"></span><span class="hljs-string">        with open(&quot;/pipeline-stage-share/dependency_tree.txt.md5sum&quot;,&quot;w&quot;) as f:</span><span class="hljs-string">            f.write(file_md5)</span><span class="hljs-string">            f.flush()</span><span class="hljs-string">        commandStr = &quot;cat /pipeline-stage-share/dependency_tree.txt &gt; dependency_tree.txt&quot;</span><span class="hljs-string">        runCommand(commandStr)</span><span class="hljs-string">        </span><span class="hljs-string"></span><span class="hljs-string">    depFiles = []</span><span class="hljs-string">    for line in open(&quot;Dockerfile&quot;):</span><span class="hljs-string">        line = line.strip()</span><span class="hljs-string">        if line.startswith(&quot;COPY&quot;) or line.startswith(&quot;ADD&quot;):</span><span class="hljs-string">            lineWords = line.split()</span><span class="hljs-string">            del lineWords[0]</span><span class="hljs-string">            del lineWords[-1]</span><span class="hljs-string">            for depFile in lineWords:</span><span class="hljs-string">                depFile = depFile.strip(&quot;/&quot;)</span><span class="hljs-string">                depFiles.append(depFile)</span><span class="hljs-string">    depFiles.append(&quot;Dockerfile&quot;)</span><span class="hljs-string"></span><span class="hljs-string">    for depFile in depFiles:</span><span class="hljs-string">        if not os.path.exists(depFile):</span><span class="hljs-string">            print(&quot;Not found: &#123;&#125;&quot;.format(depFile))</span><span class="hljs-string">            sys.exit(1)</span><span class="hljs-string">        commandStr = &quot;cp --parents -raf &#123;&#125; dockerBuildOnly/&quot;.format(depFile)</span><span class="hljs-string">        print(commandStr)</span><span class="hljs-string">        r = runCommand(commandStr)</span><span class="hljs-string">        if r == False:</span><span class="hljs-string">            sys.exit(1)</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    sys.exit(0)</span><span class="hljs-string">  pomTrack.py: &gt;</span><span class="hljs-string">    #! /usr/bin/env python</span><span class="hljs-string"></span><span class="hljs-string">    # -*- coding: utf-8 -*-</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    import xml.etree.ElementTree as et</span><span class="hljs-string"></span><span class="hljs-string">    import sys</span><span class="hljs-string"></span><span class="hljs-string">    import json</span><span class="hljs-string"></span><span class="hljs-string">    import os</span><span class="hljs-string"></span><span class="hljs-string">    import traceback</span><span class="hljs-string"></span><span class="hljs-string">    import requests</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    envName = sys.argv[1]</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    def pomTrack(xmlFile,module):</span><span class="hljs-string">        global deploy_list</span><span class="hljs-string">        global my_group_id</span><span class="hljs-string">        deploy_list[module] = &#123;&#125;</span><span class="hljs-string">        deploy_list[module][&quot;pom&quot;] = xmlFile</span><span class="hljs-string"></span><span class="hljs-string">        dependency_list_by_pom[xmlFile] = []</span><span class="hljs-string">        if not os.path.exists(xmlFile):</span><span class="hljs-string">            print(&quot;Not found: &quot;,xmlFile)</span><span class="hljs-string">            return True</span><span class="hljs-string">        try:</span><span class="hljs-string">            tree = et.parse(xmlFile)</span><span class="hljs-string">            #print(tree)</span><span class="hljs-string">        except:</span><span class="hljs-string">            traceback.print_exc()</span><span class="hljs-string">            return False</span><span class="hljs-string">        # print(xmlFile)</span><span class="hljs-string">        root = tree.getroot()</span><span class="hljs-string">        #print(thisXml.attrib)</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;name&quot;):</span><span class="hljs-string">                deploy_list[module][&quot;name&quot;] = i.text</span><span class="hljs-string">                break</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;artifactId&quot;):</span><span class="hljs-string">                deploy_list[module][&quot;artifactId&quot;] = i.text</span><span class="hljs-string">                break</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;groupId&quot;):</span><span class="hljs-string">                my_group_id = i.text</span><span class="hljs-string">                deploy_list[module][&quot;groupId&quot;] = i.text</span><span class="hljs-string">                break</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;packaging&quot;):</span><span class="hljs-string">                deploy_list[module][&quot;packaging&quot;] = i.text</span><span class="hljs-string">                break</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;version&quot;):</span><span class="hljs-string">                deploy_list[module][&quot;version&quot;] = i.text</span><span class="hljs-string">                break</span><span class="hljs-string">        if &quot;groupId&quot; not in deploy_list[module].keys():</span><span class="hljs-string">            deploy_list[module][&quot;groupId&quot;] = my_group_id</span><span class="hljs-string">        </span><span class="hljs-string">        </span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;dependencies&quot;):</span><span class="hljs-string">                #print(&quot;\tdependencies:&quot;)</span><span class="hljs-string">                for j in i:</span><span class="hljs-string">                    if j.tag.endswith(&quot;dependency&quot;):</span><span class="hljs-string">                        isDepAxzo = False</span><span class="hljs-string">                        thisMap = &#123;&#125;</span><span class="hljs-string">                        for k in j:</span><span class="hljs-string">                            thisMap[k.tag.replace(&#x27;&#123;http://maven.apache.org/POM/4.0.0&#125;&#x27;,&quot;&quot;)] = k.text</span><span class="hljs-string">                            if k.tag.replace(&#x27;&#123;http://maven.apache.org/POM/4.0.0&#125;&#x27;,&quot;&quot;) == &quot;groupId&quot; and k.text.startswith(&quot;cn.axzo.&quot;):</span><span class="hljs-string">                                if k.text not in dependency_list.keys():</span><span class="hljs-string">                                    dependency_list[k.text] = []</span><span class="hljs-string">                                isDepAxzo = True</span><span class="hljs-string">                        if isDepAxzo:</span><span class="hljs-string">                            for k in j:</span><span class="hljs-string">                                if k.tag.replace(&#x27;&#123;http://maven.apache.org/POM/4.0.0&#125;&#x27;,&quot;&quot;) == &quot;groupId&quot; and k.text.startswith(&quot;cn.axzo.&quot;):</span><span class="hljs-string">                                    dependency_list_by_pom[xmlFile].append(thisMap)</span><span class="hljs-string">                                    if thisMap[&quot;artifactId&quot;] not in dependency_list[k.text]:</span><span class="hljs-string">                                        dependency_list[k.text].append(thisMap[&quot;artifactId&quot;])</span><span class="hljs-string">                break</span><span class="hljs-string">        for i in root:</span><span class="hljs-string">            if i.tag.endswith(&quot;modules&quot;):</span><span class="hljs-string">                for j in i:</span><span class="hljs-string">                    if j.tag.endswith(&quot;module&quot;):</span><span class="hljs-string">                        xmlFileName = xmlFile.split(&quot;/&quot;)[-1]</span><span class="hljs-string">                        moduleXmlFile = &quot;&#123;&#125;/pom.xml&quot;.format(xmlFile.replace(xmlFileName,j.text))</span><span class="hljs-string">                        pomTrack(moduleXmlFile,j.text)</span><span class="hljs-string"></span><span class="hljs-string">    my_group_id = &quot;None&quot;</span><span class="hljs-string"></span><span class="hljs-string">    deploy_list = &#123;&#125;</span><span class="hljs-string"></span><span class="hljs-string">    dependency_list = &#123;&#125;</span><span class="hljs-string"></span><span class="hljs-string">    dependency_list_by_pom = &#123;&#125;</span><span class="hljs-string"></span><span class="hljs-string">    pomTrack(&quot;./pom.xml&quot;,&quot;root&quot;)       </span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # print(json.dumps(deploy_list,sort_keys=True, indent=4,</span><span class="hljs-string">    ensure_ascii=False))</span><span class="hljs-string"></span><span class="hljs-string">    # print(json.dumps(dependency_list,sort_keys=True, indent=4,</span><span class="hljs-string">    ensure_ascii=False))</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    print(&quot;依赖清单：&quot;)</span><span class="hljs-string"></span><span class="hljs-string">    for k,v in dependency_list.items():</span><span class="hljs-string">        for x in v:</span><span class="hljs-string">            if envName in [&quot;axzo-pro&quot;,&quot;axzo-live&quot;] or envName.endswith(&quot;-prod&quot;):</span><span class="hljs-string">                repository = &quot;axzo-master&quot;</span><span class="hljs-string">            else:</span><span class="hljs-string">                repository = envName</span><span class="hljs-string">            url = &quot;https://nexus.axzo.cn/service/rest/v1/search?repository=&#123;&#125;&amp;group=&#123;&#125;&amp;name=&#123;&#125;&amp;sort=version&amp;direction=desc&quot;.format(repository,k,x)</span><span class="hljs-string">            headers = &#123;</span><span class="hljs-string">                &#x27;content-type&#x27;: &#x27;application/json&#x27;,</span><span class="hljs-string">                &#x27;Accept&#x27;: &#x27;application/json;charset=utf-8&#x27;</span><span class="hljs-string">            &#125;</span><span class="hljs-string">            try:</span><span class="hljs-string">                r = requests.get(url=url, headers=headers)</span><span class="hljs-string">                # print(r.text)</span><span class="hljs-string">                r_json = json.loads(r.text)</span><span class="hljs-string">                for i in r_json[&quot;items&quot;]:</span><span class="hljs-string">                    print(&quot;&#123;&#125;.&#123;&#125;: &#123;&#125;&quot;.format(k,x,i[&quot;version&quot;]))</span><span class="hljs-string">                    break</span><span class="hljs-string">            except:</span><span class="hljs-string">                # traceback.print_exc()</span><span class="hljs-string">                continue</span><span class="hljs-string">    #print(json.dumps(dependency_list_by_pom,sort_keys=True, indent=4,</span><span class="hljs-string">    ensure_ascii=False))</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">    # sys.exit(0)</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-scripts</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="创建secrets"><a href="#创建secrets" class="headerlink" title="创建secrets"></a>创建secrets</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">data:</span><span class="hljs-string">  git-credentials: xxxx</span><span class="hljs-string">kind: Secret</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-secret</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">type: Opaque</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a>创建PVC</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: PersistentVolumeClaim</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-1223</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner</span><span class="hljs-string">spec:</span><span class="hljs-string">  accessModes:</span><span class="hljs-string">    - ReadWriteMany</span><span class="hljs-string">  resources:</span><span class="hljs-string">    requests:</span><span class="hljs-string">      storage: 50Gi</span><span class="hljs-string">  storageClassName: sfsturbo-k8s-ops</span><span class="hljs-string">  volumeMode: Filesystem</span><span class="hljs-string">---</span><span class="hljs-string">kind: PersistentVolumeClaim</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: maven</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner</span><span class="hljs-string">spec:</span><span class="hljs-string">  accessModes:</span><span class="hljs-string">    - ReadWriteMany</span><span class="hljs-string">  resources:</span><span class="hljs-string">    requests:</span><span class="hljs-string">      storage: 550Gi</span><span class="hljs-string">  storageClassName: sfsturbo-k8s-ops</span><span class="hljs-string">  volumeMode: Filesystem</span><span class="hljs-string">---</span><span class="hljs-string">kind: PersistentVolumeClaim</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jnlp-data</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner</span><span class="hljs-string">spec:</span><span class="hljs-string">  accessModes:</span><span class="hljs-string">    - ReadWriteMany</span><span class="hljs-string">  resources:</span><span class="hljs-string">    requests:</span><span class="hljs-string">      storage: 550Gi</span><span class="hljs-string">  storageClassName: sfsturbo-k8s-ops</span><span class="hljs-string">  volumeMode: Filesystem</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="创建deploy-service"><a href="#创建deploy-service" class="headerlink" title="创建deploy service"></a>创建deploy service</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: Deployment</span><span class="hljs-string">metadata:</span><span class="hljs-string">  labels:</span><span class="hljs-string">    name: jenkins-new</span><span class="hljs-string">  name: jenkins-new</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">spec:</span><span class="hljs-string">  progressDeadlineSeconds: 600</span><span class="hljs-string">  replicas: 0</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      name: jenkins-new</span><span class="hljs-string">  strategy:</span><span class="hljs-string">    type: Recreate</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        name: jenkins-new</span><span class="hljs-string">      name: jenkins-new</span><span class="hljs-string">    spec:</span><span class="hljs-string">      automountServiceAccountToken: true</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - env:</span><span class="hljs-string">            - name: JAVA_OPTS</span><span class="hljs-string">              value: &gt;-</span><span class="hljs-string">                -Xmx16g -Xms16g -XshowSettings:vm</span><span class="hljs-string">                -Dhudson.slaves.NodeProvisioner.initialDelay=0</span><span class="hljs-string">                -Dhudson.slaves.NodeProvisioner.MARGIN=50</span><span class="hljs-string">                -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85</span><span class="hljs-string">                -Duser.timezone=Asia/Shanghai</span><span class="hljs-string">            - name: LIMITS_MEMORY</span><span class="hljs-string">              valueFrom:</span><span class="hljs-string">                resourceFieldRef:</span><span class="hljs-string">                  divisor: &#x27;0&#x27;</span><span class="hljs-string">                  resource: limits.memory</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/devops/jenkins:2.375.1-lts&#x27;</span><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><span class="hljs-string">          livenessProbe:</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /login</span><span class="hljs-string">              port: 8080</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            initialDelaySeconds: 30</span><span class="hljs-string">            periodSeconds: 5</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            timeoutSeconds: 2</span><span class="hljs-string">          name: jenkins-new</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - containerPort: 8080</span><span class="hljs-string">              name: 8080tcp2</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - containerPort: 50000</span><span class="hljs-string">              name: 50000tcp2</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">          securityContext:</span><span class="hljs-string">            privileged: true</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - mountPath: /etc/localtime</span><span class="hljs-string">              name: tz-config</span><span class="hljs-string">            - mountPath: /var/jenkins_home</span><span class="hljs-string">              name: jenkins-1223</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      hostAliases:</span><span class="hljs-string">        - hostnames:</span><span class="hljs-string">            - harbor.axzo.cn</span><span class="hljs-string">          ip: 172.16.2.25</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">      securityContext:</span><span class="hljs-string">        fsGroup: 1000</span><span class="hljs-string">      serviceAccount: jenkins-blue</span><span class="hljs-string">      serviceAccountName: jenkins-blue</span><span class="hljs-string">      terminationGracePeriodSeconds: 10</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - hostPath:</span><span class="hljs-string">            path: /usr/share/zoneinfo/Asia/Shanghai</span><span class="hljs-string">          name: tz-config</span><span class="hljs-string">        - name: jenkins-1223</span><span class="hljs-string">          persistentVolumeClaim:</span><span class="hljs-string">            claimName: jenkins-1223</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: jenkins-new</span><span class="hljs-string">  namespace: kube-ops</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - name: http</span><span class="hljs-string">      port: 80</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      targetPort: 8080</span><span class="hljs-string">    - name: agent</span><span class="hljs-string">      port: 50000</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      targetPort: 50000</span><span class="hljs-string">  selector:</span><span class="hljs-string">    name: jenkins-new</span><span class="hljs-string">  type: NodePort</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Jenkins</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Jenkins</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Verdaccio-安装</title>
    <link href="/hexo/2024/07/22/Verdaccio-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/07/22/Verdaccio-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="Verdaccio安装"><a href="#Verdaccio安装" class="headerlink" title="Verdaccio安装"></a>Verdaccio安装</h1><p>前端私服库: <a href="https://verdaccio.org/docs/installation">官方文档</a></p><h2 id="安装node环境"><a href="#安装node环境" class="headerlink" title="安装node环境"></a>安装node环境</h2><div class="code-wrapper"><pre><code class="hljs bash">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash<span class="hljs-built_in">source</span> ~/.bashrcnvm install 18<span class="hljs-built_in">ln</span> -s <span class="hljs-string">&quot;<span class="hljs-subst">$(which node)</span>&quot;</span> /usr/bin/node<span class="hljs-built_in">ln</span> -s <span class="hljs-string">&quot;<span class="hljs-subst">$(which npm)</span>&quot;</span> /usr/bin/npmnpm install -g npm@10.5.0</code></pre></div><h2 id="安装verdaccio"><a href="#安装verdaccio" class="headerlink" title="安装verdaccio"></a>安装verdaccio</h2><div class="code-wrapper"><pre><code class="hljs bash">npm install --location=global verdaccio<span class="hljs-built_in">ln</span> -s <span class="hljs-string">&quot;<span class="hljs-subst">$(which verdaccio)</span>&quot;</span> /usr/bin/verdaccio</code></pre></div><h2 id="配置verdaccio"><a href="#配置verdaccio" class="headerlink" title="配置verdaccio"></a>配置verdaccio</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /verdaccio<span class="hljs-built_in">cd</span> /verdaccio<span class="hljs-comment"># 启动了之后马上暂停,这一步主要是让verdaccio自动创建配置文件</span>verdaccio<span class="hljs-comment"># 增加systemd文件</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/systemd/system/verdaccio.service</span><span class="hljs-string">[Unit]</span><span class="hljs-string">Description=Verdaccio lightweight npm proxy registry</span><span class="hljs-string"></span><span class="hljs-string">[Service]</span><span class="hljs-string">Type=simple</span><span class="hljs-string">Restart=on-failure</span><span class="hljs-string">ExecStart=/usr/bin/verdaccio --config /verdaccio/config.yaml</span><span class="hljs-string">SyslogIdentifier=verdaccio</span><span class="hljs-string">StandardOutput=append:/var/log/verdaccio/verdaccio.log</span><span class="hljs-string">StandardError=syslog</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">[Install]</span><span class="hljs-string">WantedBy=multi-user.target</span><span class="hljs-string">EOF</span><span class="hljs-comment"># 创建日志轮替</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/logrotate.d/verdaccio</span><span class="hljs-string">/var/log/verdaccio/*.log &#123;</span><span class="hljs-string">        daily</span><span class="hljs-string">        missingok</span><span class="hljs-string">        rotate 7</span><span class="hljs-string">        compress</span><span class="hljs-string">        delaycompress</span><span class="hljs-string">        notifempty</span><span class="hljs-string">dateext</span><span class="hljs-string">        create 640 root root</span><span class="hljs-string">        sharedscripts</span><span class="hljs-string">        postrotate</span><span class="hljs-string">   /usr/bin/systemctl restart verdaccio</span><span class="hljs-string">   /usr/bin/systemctl restart rsyslog</span><span class="hljs-string">        endscript</span><span class="hljs-string">&#125;</span><span class="hljs-string">EOF</span>systemctl daemon-reload</code></pre></div><h2 id="启动verdaccio"><a href="#启动verdaccio" class="headerlink" title="启动verdaccio"></a>启动verdaccio</h2><div class="code-wrapper"><pre><code class="hljs bash">systemdct <span class="hljs-built_in">enable</span> verdacciosystemctl start verdaccio</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Verdaccio</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Verdaccio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker-安装</title>
    <link href="/hexo/2024/07/15/Docker-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/07/15/Docker-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><div class="code-wrapper"><pre><code class="hljs bash">dnf install -y device-mapper-persistent-data lvm2dnf config-manager --add-repo=https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repodnf install -y docker-ce --nobestdocker -vsystemctl start dockersystemctl <span class="hljs-built_in">enable</span> dockersystemctl status docker</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker-安装</title>
    <link href="/hexo/2024/07/15/Docker-%E5%B8%B8%E7%94%A8Dockerfile/"/>
    <url>/hexo/2024/07/15/Docker-%E5%B8%B8%E7%94%A8Dockerfile/</url>
    
    <content type="html"><![CDATA[<h1 id="NFS-server"><a href="#NFS-server" class="headerlink" title="NFS-server"></a>NFS-server</h1><p><a href="https://github.com/alphayax/docker-volume-nfs">NFS-server</a></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-StorageClass</title>
    <link href="/hexo/2024/06/25/Kubernetes-StorageClass/"/>
    <url>/hexo/2024/06/25/Kubernetes-StorageClass/</url>
    
    <content type="html"><![CDATA[<h1 id="StorageClass"><a href="#StorageClass" class="headerlink" title="StorageClass"></a>StorageClass</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><h3 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h3><div class="code-wrapper"><pre><code class="hljs bash">helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \    --<span class="hljs-built_in">set</span> nfs.server=192.168.10.237 \    --<span class="hljs-built_in">set</span> nfs.path=/ifs/kubernetes/</code></pre></div><p><strong>设置为默认存储类</strong></p><div class="code-wrapper"><pre><code class="hljs bash">kubectl patch storageclass nfs-client -p <span class="hljs-string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></code></pre></div><h3 id="华为云创建SFS"><a href="#华为云创建SFS" class="headerlink" title="华为云创建SFS"></a>华为云创建SFS</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: StorageClass</span><span class="hljs-string">apiVersion: storage.k8s.io/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: sfsturbo-k8s-ops</span><span class="hljs-string">provisioner: everest-csi-provisioner</span><span class="hljs-string">parameters:</span><span class="hljs-string">  csi.storage.k8s.io/csi-driver-name: sfsturbo.csi.everest.io</span><span class="hljs-string">  csi.storage.k8s.io/fstype: nfs</span><span class="hljs-string">  everest.io/archive-on-delete: &#x27;true&#x27;</span><span class="hljs-string">  everest.io/share-expand-type: bandwidth</span><span class="hljs-string">  everest.io/share-export-location: xxxx.sfsturbo.internal:/k8s-ops-sc/</span><span class="hljs-string">  everest.io/share-source: sfs-turbo</span><span class="hljs-string">  everest.io/share-volume-type: STANDARD</span><span class="hljs-string">  everest.io/volume-as: subpath</span><span class="hljs-string">  everest.io/volume-id: xxxxx</span><span class="hljs-string">reclaimPolicy: Delete</span><span class="hljs-string">mountOptions:</span><span class="hljs-string">  - nolock=false</span><span class="hljs-string">volumeBindingMode: Immediate</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Filebeat安装</title>
    <link href="/hexo/2024/06/11/ELK-Filebeat/"/>
    <url>/hexo/2024/06/11/ELK-Filebeat/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.14/filebeat-installation-configuration.html">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/downloadswget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.14.2-x86_64.rpm -O ~/downloads/filebeat-7.14.2-x86_64.rpmyum install -y ~/downloads/filebeat-7.14.2-x86_64.rpm</code></pre></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml.default</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FluentBit安装</title>
    <link href="/hexo/2024/06/11/ELK-FluentBit/"/>
    <url>/hexo/2024/06/11/ELK-FluentBit/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://docs.fluentbit.io/manual/installation/getting-started-with-fluent-bit">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/fluent/fluent-bit/master/install.sh | sh</code></pre></div><h1 id="备份默认文件"><a href="#备份默认文件" class="headerlink" title="备份默认文件"></a>备份默认文件</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/fluent-bit/fluent-bit.conf /etc/fluent-bit/fluent-bit.conf.default<span class="hljs-built_in">cp</span> /etc/fluent-bit/parsers.conf /etc/fluent-bit/fparsers.conf.default</code></pre></div><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><h2 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> IP=x.x.x.x</code></pre></div><h2 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/fluent-bit.conf</span><span class="hljs-string">[SERVICE]</span><span class="hljs-string">    flush        1</span><span class="hljs-string">    daemon       Off</span><span class="hljs-string">    log_level    info</span><span class="hljs-string">    parsers_file parsers.conf</span><span class="hljs-string">    plugins_file plugins.conf</span><span class="hljs-string"></span><span class="hljs-string">@INCLUDE secure-input.conf</span><span class="hljs-string">@INCLUDE secure-filter.conf</span><span class="hljs-string">@INCLUDE secure-output.conf</span><span class="hljs-string">@INCLUDE messages-input.conf</span><span class="hljs-string">@INCLUDE messages-filter.conf</span><span class="hljs-string">@INCLUDE messages-output.conf</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="增加parser配置"><a href="#增加parser配置" class="headerlink" title="增加parser配置"></a>增加parser配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/fluent-bit/parsers.conf</span><span class="hljs-string"></span><span class="hljs-string">[PARSER]</span><span class="hljs-string">    Name axzo-os-log</span><span class="hljs-string">    Format regex</span><span class="hljs-string">    Regex ^(?&lt;time&gt;[^ ]* &#123;1,2&#125;[^ ]* [^ ]*) (?&lt;hostname&gt;[^ ]*) (?&lt;process&gt;[^ ]*)\: (?&lt;message&gt;.*)$</span><span class="hljs-string">    Time_Key    time</span><span class="hljs-string">    Time_Format %b %d %H:%M:%S</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集secure日志配置"><a href="#采集secure日志配置" class="headerlink" title="采集secure日志配置"></a>采集secure日志配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/secure</span><span class="hljs-string">    Tag kube-secure.*</span><span class="hljs-string">    DB                /var/log/flb_kube_secure.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Regex log /.*sshd.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-secure.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-secure-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集message-kernel日志"><a href="#采集message-kernel日志" class="headerlink" title="采集message kernel日志"></a>采集message kernel日志</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/messages</span><span class="hljs-string">    Tag kube-messages.*</span><span class="hljs-string">    DB                /var/log/flb_kube_messages.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/messages-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Regex log /.*kernel.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-messages.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-messages-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><div class="code-wrapper"><pre><code class="hljs bash">systemctl start fluent-bitsystemctl <span class="hljs-built_in">enable</span> fluent-bitsystemctl status fluent-bit</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EMQX-备份还原</title>
    <link href="/hexo/2024/06/11/EMQX-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/"/>
    <url>/hexo/2024/06/11/EMQX-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/</url>
    
    <content type="html"><![CDATA[<p><a href="https://docs.emqx.com/zh/emqx/latest/operations/backup-restore.html">官方文档</a></p><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><div class="code-wrapper"><pre><code class="hljs bash">emqx_ctl data <span class="hljs-built_in">export</span></code></pre></div><h1 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h1><p><strong>注意</strong> &lt;filename&gt; 必须是绝对路径</p><div class="code-wrapper"><pre><code class="hljs bash">emqx_ctl data import &lt;filename&gt;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>EMQX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>EMQX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EMQX-安装</title>
    <link href="/hexo/2024/06/11/EMQX-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/06/11/EMQX-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://docs.emqx.com/zh/emqx/v4.3/getting-started/install-on-k8s.html">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash">kubectl create ns pro-emqx</code></pre></div><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: StatefulSet</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 3</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app.kubernetes.io/instance: emqx</span><span class="hljs-string">      app.kubernetes.io/name: emqx</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      creationTimestamp: null</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: emqx</span><span class="hljs-string">        app.kubernetes.io/instance: emqx</span><span class="hljs-string">        app.kubernetes.io/name: emqx</span><span class="hljs-string">        version: latest</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: pro-emqx-data</span><span class="hljs-string">          persistentVolumeClaim:</span><span class="hljs-string">            claimName: emqx-data</span><span class="hljs-string">        - name: tz-config</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /usr/share/zoneinfo/Asia/Shanghai</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">        - name: pro-emqx-conf</span><span class="hljs-string">          persistentVolumeClaim:</span><span class="hljs-string">            claimName: emqx-conf</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: emqx</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/axzo-k8s/emqx:4.3.10&#x27;</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - name: mqtt</span><span class="hljs-string">              containerPort: 1883</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: mqttssl</span><span class="hljs-string">              containerPort: 8883</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: ws</span><span class="hljs-string">              containerPort: 8083</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: wss</span><span class="hljs-string">              containerPort: 8084</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: dashboard</span><span class="hljs-string">              containerPort: 18083</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: ekka</span><span class="hljs-string">              containerPort: 4370</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">            - name: mgmt</span><span class="hljs-string">              containerPort: 8081</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">          envFrom:</span><span class="hljs-string">            - configMapRef:</span><span class="hljs-string">                name: emqx-env</span><span class="hljs-string">          env:</span><span class="hljs-string">            - name: EMQX_CLUSTER__DISCOVERY</span><span class="hljs-string">              value: k8s</span><span class="hljs-string">            - name: EMQX_CLUSTER__K8S__APP_NAME</span><span class="hljs-string">              value: emqx</span><span class="hljs-string">            - name: EMQX_CLUSTER__K8S__NAMESPACE</span><span class="hljs-string">              value: pro-emqx</span><span class="hljs-string">            - name: EMQX_CLUSTER__K8S__SERVICE_NAME</span><span class="hljs-string">              value: emqx-headless</span><span class="hljs-string">            - name: EMQX_NAME</span><span class="hljs-string">              value: emqx</span><span class="hljs-string">          resources: &#123;&#125;</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: emqx-data</span><span class="hljs-string">              mountPath: /opt/emqx/data</span><span class="hljs-string">            - name: tz-config</span><span class="hljs-string">              mountPath: /etc/localtime</span><span class="hljs-string">            - name: emqx-conf</span><span class="hljs-string">              mountPath: /opt/emqx/etc</span><span class="hljs-string">          livenessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /status</span><span class="hljs-string">              port: 8081</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            initialDelaySeconds: 5</span><span class="hljs-string">            timeoutSeconds: 2</span><span class="hljs-string">            periodSeconds: 2</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          readinessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /status</span><span class="hljs-string">              port: 8081</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            initialDelaySeconds: 5</span><span class="hljs-string">            timeoutSeconds: 2</span><span class="hljs-string">            periodSeconds: 2</span><span class="hljs-string">            successThreshold: 2</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><span class="hljs-string">          securityContext:</span><span class="hljs-string">            runAsUser: 1000</span><span class="hljs-string">            runAsNonRoot: true</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 30</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      serviceAccountName: emqx</span><span class="hljs-string">      serviceAccount: emqx</span><span class="hljs-string">      securityContext:</span><span class="hljs-string">        runAsUser: 1000</span><span class="hljs-string">        supplementalGroups:</span><span class="hljs-string">          - 1000</span><span class="hljs-string">        fsGroup: 1000</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">  serviceName: emqx-headless</span><span class="hljs-string">  podManagementPolicy: Parallel</span><span class="hljs-string">  updateStrategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">---</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx-env</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">data:</span><span class="hljs-string">  EMQX_CLUSTER__K8S__ADDRESS_TYPE: hostname</span><span class="hljs-string">  EMQX_CLUSTER__K8S__APISERVER: &#x27;https://kubernetes.default.svc:443&#x27;</span><span class="hljs-string">  EMQX_CLUSTER__K8S__SUFFIX: svc.cluster.local</span><span class="hljs-string">---</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx-nodeport</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - name: mqtt</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 1883</span><span class="hljs-string">      targetPort: 1883</span><span class="hljs-string">      nodePort: 30011</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">    workloadID_emqx: &#x27;true&#x27;</span><span class="hljs-string">  type: NodePort</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  externalTrafficPolicy: Cluster</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">---</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - name: mqtt</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 1883</span><span class="hljs-string">      targetPort: mqtt</span><span class="hljs-string">    - name: mqttssl</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8883</span><span class="hljs-string">      targetPort: mqttssl</span><span class="hljs-string">    - name: ws</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8083</span><span class="hljs-string">      targetPort: ws</span><span class="hljs-string">    - name: wss</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8084</span><span class="hljs-string">      targetPort: wss</span><span class="hljs-string">    - name: dashboard</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 18083</span><span class="hljs-string">      targetPort: dashboard</span><span class="hljs-string">    - name: mgmt</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8081</span><span class="hljs-string">      targetPort: mgmt</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">---</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx-headless</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - name: mqtt</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 1883</span><span class="hljs-string">      targetPort: mqtt</span><span class="hljs-string">    - name: mqttssl</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8883</span><span class="hljs-string">      targetPort: mqttssl</span><span class="hljs-string">    - name: ws</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8083</span><span class="hljs-string">      targetPort: ws</span><span class="hljs-string">    - name: wss</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8084</span><span class="hljs-string">      targetPort: wss</span><span class="hljs-string">    - name: dashboard</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 18083</span><span class="hljs-string">      targetPort: dashboard</span><span class="hljs-string">    - name: ekka</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 4370</span><span class="hljs-string">      targetPort: ekka</span><span class="hljs-string">    - name: mgmt</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8081</span><span class="hljs-string">      targetPort: mgmt</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app.kubernetes.io/instance: emqx</span><span class="hljs-string">    app.kubernetes.io/name: emqx</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  publishNotReadyAddresses: true</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: Role</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">rules:</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - endpoints</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - get</span><span class="hljs-string">  - watch</span><span class="hljs-string">  - list</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: RoleBinding</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">roleRef:</span><span class="hljs-string">  apiGroup: rbac.authorization.k8s.io</span><span class="hljs-string">  kind: Role</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">subjects:</span><span class="hljs-string">- kind: ServiceAccount</span><span class="hljs-string">  name: emqx</span><span class="hljs-string">  namespace: pro-emqx</span><span class="hljs-string">---</span><span class="hljs-string"></span><span class="hljs-string">EOF</span></code></pre></div><h1 id="5-X版本安装"><a href="#5-X版本安装" class="headerlink" title="5.X版本安装"></a>5.X版本安装</h1><h2 id="安装cert-manager"><a href="#安装cert-manager" class="headerlink" title="安装cert-manager"></a>安装cert-manager</h2><div class="code-wrapper"><pre><code class="hljs bash">helm repo add jetstack https://charts.jetstack.iohelm repo updatehelm upgrade --install cert-manager jetstack/cert-manager \  --namespace cert-manager \  --create-namespace \  --<span class="hljs-built_in">set</span> installCRDs=<span class="hljs-literal">true</span></code></pre></div><h2 id="安装-EMQX-Operator"><a href="#安装-EMQX-Operator" class="headerlink" title="安装 EMQX Operator"></a>安装 EMQX Operator</h2><div class="code-wrapper"><pre><code class="hljs bash">helm repo add emqx https://repos.emqx.io/chartshelm repo updatehelm upgrade --install emqx-operator emqx/emqx-operator \  --namespace emqx-operator-system \  --create-namespace<span class="hljs-comment"># 确认 Operator 状态</span>kubectl <span class="hljs-built_in">wait</span> --<span class="hljs-keyword">for</span>=condition=Ready pods -l <span class="hljs-string">&quot;control-plane=controller-manager&quot;</span> -n emqx-operator-system</code></pre></div><h2 id="安装-EMQX"><a href="#安装-EMQX" class="headerlink" title="安装 EMQX"></a>安装 EMQX</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps.emqx.io/v2beta1</span><span class="hljs-string">kind: EMQX</span><span class="hljs-string">metadata:</span><span class="hljs-string">   name: open-emqx</span><span class="hljs-string">   namespace: java-dev</span><span class="hljs-string">spec:</span><span class="hljs-string">   image: harbor.axzo.cn/library/emqx:5</span><span class="hljs-string">   coreTemplate:</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumeClaimTemplates:</span><span class="hljs-string">        storageClassName: sfsturbo-sc-dev</span><span class="hljs-string">        resources:</span><span class="hljs-string">          requests:</span><span class="hljs-string">            storage: 10Gi</span><span class="hljs-string">        accessModes:</span><span class="hljs-string">          - ReadWriteMany</span><span class="hljs-string">EOF</span><span class="hljs-comment"># 确认EMQX状态</span>kubectl get emqx -n java-dev<span class="hljs-comment"># 增加nodePort</span>kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: open-emqx-nodeport</span><span class="hljs-string">  namespace: java-dev</span><span class="hljs-string">  labels:</span><span class="hljs-string">    apps.emqx.io/instance: open-emqx</span><span class="hljs-string">    apps.emqx.io/managed-by: emqx-operator</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - name: open-emqx-1883</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 1883</span><span class="hljs-string">      targetPort: 1883</span><span class="hljs-string">    - name: open-emqx-8883</span><span class="hljs-string">      protocol: TCP</span><span class="hljs-string">      port: 8883</span><span class="hljs-string">      targetPort: 8883</span><span class="hljs-string">  selector:</span><span class="hljs-string">    apps.emqx.io/instance: open-emqx</span><span class="hljs-string">    apps.emqx.io/managed-by: emqx-operator</span><span class="hljs-string">  type: NodePort</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>EMQX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>EMQX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ETCD-数据备份与恢复</title>
    <link href="/hexo/2024/06/11/ETCD-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/"/>
    <url>/hexo/2024/06/11/ETCD-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><div class="code-wrapper"><pre><code class="hljs bash">ETCDCTL_API=3 etcdctl snapshot save snapshot.dbETCDCTL_API=3 etcdctl  snapshot status snapshot.db -w=table</code></pre></div><h1 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h1><p>在 <code>containers</code> 同级增加以下yaml 同时挂载pvc进去</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">initContainers:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data-restore</span>    <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;harbor.axzo.cn/ops/etcd:3.5.4-debian-11-r14&#x27;</span>    <span class="hljs-attr">command:</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/bash</span>    <span class="hljs-attr">args:</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;-c&#x27;</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;rm -rf /bitnami/etcd/data/* &amp;&amp; etcdctl snapshot restore /restore-volume/20240617_030015_apisix_snapshot.db --name $(MY_POD_NAME) --data-dir=/bitnami/etcd/data --initial-cluster pro-apisix-etcd-0=http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-1=http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-2=http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380 --initial-cluster-token etcd-cluster-k8s --initial-advertise-peer-urls http://$(MY_POD_NAME).pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380&#x27;</span>    <span class="hljs-attr">env:</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">MY_POD_NAME</span>        <span class="hljs-attr">valueFrom:</span>          <span class="hljs-attr">fieldRef:</span>            <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>            <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.name</span>    <span class="hljs-attr">resources:</span> &#123;&#125;    <span class="hljs-attr">volumeMounts:</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span>        <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/bitnami/etcd</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restore-volume</span>        <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/restore-volume</span>    <span class="hljs-attr">terminationMessagePath:</span> <span class="hljs-string">/dev/termination-log</span>    <span class="hljs-attr">terminationMessagePolicy:</span> <span class="hljs-string">File</span>    <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ETCD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ETCD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-Service/Ingress</title>
    <link href="/hexo/2024/05/29/Kubernetes-Service/"/>
    <url>/hexo/2024/05/29/Kubernetes-Service/</url>
    
    <content type="html"><![CDATA[<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Kubernetes 中 Service 是 将运行在一个或一组 Pod 上的网络应用程序公开为网络服务的方法。</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><ul><li>ClusterIP</li><li>ExternalName: 返回定义的CNAME别名，可以配置为域名</li><li>NodePort: 所有node上绑定一个端口 在任意一个节点+端口号都能访问</li><li>LoadBalancer: 负载均衡器</li></ul><h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>Ingress 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。</p><p>Ingress 可以提供负载均衡、SSL 终结和基于名称的虚拟托管。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="添加Helm仓库"><a href="#添加Helm仓库" class="headerlink" title="添加Helm仓库"></a>添加Helm仓库</h3><div class="code-wrapper"><pre><code class="hljs bash">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</code></pre></div><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><div class="code-wrapper"><pre><code class="hljs bash">helm pull ingress-nginx/ingress-nginxtar xf ingress-nginx-4.10.1.tgz</code></pre></div><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ingress-nginxhelm install ingress-nginx --create-namespace -n ingress-nginx .</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-存储与配置</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl create configmap -h</code></pre></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><p>直接挂载</p></li><li><p>文件挂载</p></li></ul><h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><h2 id="使用类型"><a href="#使用类型" class="headerlink" title="使用类型"></a>使用类型</h2><ul><li>docker-registry</li><li>tls</li></ul><h1 id="SubPath"><a href="#SubPath" class="headerlink" title="SubPath"></a>SubPath</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-持久化存储</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="HostPath"><a href="#HostPath" class="headerlink" title="HostPath"></a>HostPath</h1><h1 id="EmptyDir"><a href="#EmptyDir" class="headerlink" title="EmptyDir"></a>EmptyDir</h1><h1 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h1><h2 id="安装NFS"><a href="#安装NFS" class="headerlink" title="安装NFS"></a>安装NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">yum -y install nfs-utils</code></pre></div><h2 id="启动NFS"><a href="#启动NFS" class="headerlink" title="启动NFS"></a>启动NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl start nfs-serversystemctl <span class="hljs-built_in">enable</span> nfs-server</code></pre></div><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /data/nfs/ro<span class="hljs-built_in">mkdir</span> -p /data/nfs/rw</code></pre></div><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/exports</span><span class="hljs-string">/data/nfs/rw 192.168.10.0/24(rw,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">/data/nfs/ro 192.168.10.0/24(ro,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">EOF</span>exportfs -rsystemctl restart nfs-server</code></pre></div><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /mnt/nfs/rwmount -t nfs 192.168.10.245:/data/nfs/rw /mnt/nfs/rw/</code></pre></div><h1 id="PV-PVC"><a href="#PV-PVC" class="headerlink" title="PV&#x2F;PVC"></a>PV&#x2F;PVC</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-日志采集</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="容器日志采集"><a href="#容器日志采集" class="headerlink" title="容器日志采集"></a>容器日志采集</h1><p>基于 FluentBit + Kafka + ELK 的日志采集系统</p><h1 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl create ns logging</code></pre></div><h1 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h1><h2 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h2><h3 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: StatefulSet</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: zookeeper</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: zookeeper</span><span class="hljs-string">  serviceName: zookeeper</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: zookeeper</span><span class="hljs-string">    spec:</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: zookeeper</span><span class="hljs-string">          image: harbor.axzo.cn/ops/zookeeper:3.9.2</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - containerPort: 2181</span><span class="hljs-string">              name: zookeeperclient</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: zookeeper   # 与serviceName 同名</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - port: 2181</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: zookeeper</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h2><h3 id="StatefulSet-1"><a href="#StatefulSet-1" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: StatefulSet</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kafka</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: kafka</span><span class="hljs-string">  serviceName: kafka</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: kafka</span><span class="hljs-string">    spec:</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: kafka</span><span class="hljs-string">          image: harbor.axzo.cn/ops/kafka:3.3.2</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - containerPort: 9092</span><span class="hljs-string">              name: service</span><span class="hljs-string">          env:</span><span class="hljs-string">            - name: ALLOW_ANONYMOUS_LOGIN</span><span class="hljs-string">              value: &quot;yes&quot;</span><span class="hljs-string">            - name: KAFKA_CFG_ZOOKEEPER_CONNECT</span><span class="hljs-string">              value: &quot;zookeeper:2181&quot;</span><span class="hljs-string">            - name: ALLOW_PLAINTEXT_LISTENER</span><span class="hljs-string">              value: &quot;yes&quot;</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kafka</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - port: 9092</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: kafka</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 创建topic</span>kubectl <span class="hljs-built_in">exec</span> -it kafka-0 -n logging -- /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic k8s-logs<span class="hljs-comment"># 列出topic</span>kubectl <span class="hljs-built_in">exec</span> -it kafka-0 -n logging -- /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092</code></pre></div><h1 id="FluentBit"><a href="#FluentBit" class="headerlink" title="FluentBit"></a>FluentBit</h1><h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit-config</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: fluent-bit</span><span class="hljs-string">data:</span><span class="hljs-string">  filter.conf: |-</span><span class="hljs-string">    [FILTER]</span><span class="hljs-string">        Name                kubernetes</span><span class="hljs-string">        Match               kube.*</span><span class="hljs-string">        Kube_URL            https://kubernetes.default.svc:443</span><span class="hljs-string">        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><span class="hljs-string">        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token</span><span class="hljs-string">        Kube_Tag_Prefix     kube.var.log.containers.</span><span class="hljs-string">        Merge_Log           On</span><span class="hljs-string">        K8S-Logging.Parser  On</span><span class="hljs-string">        K8S-Logging.Exclude Off</span><span class="hljs-string">        Annotations         Off</span><span class="hljs-string">    [FILTER]</span><span class="hljs-string">        Name           grep</span><span class="hljs-string">        Match          kube.*</span><span class="hljs-string">        regex         \$kubernetes[&#x27;labels&#x27;][&#x27;logging&#x27;] true</span><span class="hljs-string">    [FILTER]</span><span class="hljs-string">        Name record_modifier</span><span class="hljs-string">        Match kube.*</span><span class="hljs-string">        Remove_key kubernetes.container*</span><span class="hljs-string">        Remove_key kubernetes.pod_id</span><span class="hljs-string">        Remove_key kubernetes.docker_id</span><span class="hljs-string">        Remove_key kubernetes.labels</span><span class="hljs-string">        Remove_key log</span><span class="hljs-string">  fluent-bit.conf: |-</span><span class="hljs-string">    [SERVICE]</span><span class="hljs-string">        Flush         1</span><span class="hljs-string">        Log_Level     info</span><span class="hljs-string">        Daemon        off</span><span class="hljs-string">        Parsers_File  parsers.conf</span><span class="hljs-string">        HTTP_Server   On</span><span class="hljs-string">        HTTP_Listen   0.0.0.0</span><span class="hljs-string">        HTTP_Port     2020</span><span class="hljs-string"></span><span class="hljs-string">    @INCLUDE input.conf</span><span class="hljs-string">    @INCLUDE filter.conf</span><span class="hljs-string">    @INCLUDE output-kafka.conf</span><span class="hljs-string">  input.conf: |-</span><span class="hljs-string">    [INPUT]</span><span class="hljs-string">        Name              tail</span><span class="hljs-string">        Tag               kube.*</span><span class="hljs-string">        Path              /var/log/containers/*.log</span><span class="hljs-string">        Parser            docker</span><span class="hljs-string">        DB                /var/log/flb_kube.db</span><span class="hljs-string">        Mem_Buf_Limit     1MB</span><span class="hljs-string">        Skip_Long_Lines   On</span><span class="hljs-string">        Refresh_Interval  10</span><span class="hljs-string">  output-kafka.conf: |-</span><span class="hljs-string">    [OUTPUT]</span><span class="hljs-string">        Name           kafka</span><span class="hljs-string">        Match          kube.*</span><span class="hljs-string">        Brokers        kafka:9092</span><span class="hljs-string">        Topics         k8s-logs</span><span class="hljs-string">        Timestamp_Key  @timestamp</span><span class="hljs-string">        Timestamp_Format iso8601</span><span class="hljs-string">        Retry_Limit    false</span><span class="hljs-string">        # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">        rdkafka.log.connection.close false</span><span class="hljs-string">        # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">        rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">        # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">        rdkafka.request.required.acks 1</span><span class="hljs-string">  parsers.conf: |-</span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name axzo_json</span><span class="hljs-string">        Format json</span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name   apache</span><span class="hljs-string">        Format regex</span><span class="hljs-string">        Regex  ^(?&lt;host&gt;[^ ]*) [^ ]* (?&lt;user&gt;[^ ]*) \[(?&lt;time&gt;[^\]]*)\] &quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^\&quot;]*?)(?: +\S*)?)?&quot; (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: &quot;(?&lt;referer&gt;[^\&quot;]*)&quot; &quot;(?&lt;agent&gt;[^\&quot;]*)&quot;)?\$</span><span class="hljs-string">        Time_Key time</span><span class="hljs-string">        Time_Format %d/%b/%Y:%H:%M:%S %z</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name   apache2</span><span class="hljs-string">        Format regex</span><span class="hljs-string">        Regex  ^(?&lt;host&gt;[^ ]*) [^ ]* (?&lt;user&gt;[^ ]*) \[(?&lt;time&gt;[^\]]*)\] &quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^ ]*) +\S*)?&quot; (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: &quot;(?&lt;referer&gt;[^\&quot;]*)&quot; &quot;(?&lt;agent&gt;[^\&quot;]*)&quot;)?\$</span><span class="hljs-string">        Time_Key time</span><span class="hljs-string">        Time_Format %d/%b/%Y:%H:%M:%S %z</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name   apache_error</span><span class="hljs-string">        Format regex</span><span class="hljs-string">        Regex  ^\[[^ ]* (?&lt;time&gt;[^\]]*)\] \[(?&lt;level&gt;[^\]]*)\](?: \[pid (?&lt;pid&gt;[^\]]*)\])?( \[client (?&lt;client&gt;[^\]]*)\])? (?&lt;message&gt;.*)\$</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name   nginx</span><span class="hljs-string">        Format regex</span><span class="hljs-string">        Regex ^(?&lt;remote&gt;[^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;user&gt;[^ ]*) \[(?&lt;time&gt;[^\]]*)\] &quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^\&quot;]*?)(?: +\S*)?)?&quot; (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: &quot;(?&lt;referer&gt;[^\&quot;]*)&quot; &quot;(?&lt;agent&gt;[^\&quot;]*)&quot;)?\$</span><span class="hljs-string">        Time_Key time</span><span class="hljs-string">        Time_Format %d/%b/%Y:%H:%M:%S %z</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name   json</span><span class="hljs-string">        Format json</span><span class="hljs-string">        Time_Key time</span><span class="hljs-string">        Time_Format %d/%b/%Y:%H:%M:%S %z</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name        docker</span><span class="hljs-string">        Format      json</span><span class="hljs-string">        Time_Key    time</span><span class="hljs-string">        Time_Format %Y-%m-%dT%H:%M:%S.%L</span><span class="hljs-string">        Time_Keep   On</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name        syslog</span><span class="hljs-string">        Format      regex</span><span class="hljs-string">        Regex       ^\&lt;(?&lt;pri&gt;[0-9]+)\&gt;(?&lt;time&gt;[^ ]* &#123;1,2&#125;[^ ]* [^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;ident&gt;[a-zA-Z0-9_\/\.\-]*)(?:\[(?&lt;pid&gt;[0-9]+)\])?(?:[^\:]*\:)? *(?&lt;message&gt;.*)\$</span><span class="hljs-string">        Time_Key    time</span><span class="hljs-string">        Time_Format %b %d %H:%M:%S</span><span class="hljs-string"></span><span class="hljs-string">    [PARSER]</span><span class="hljs-string">        Name        axzo-os-log</span><span class="hljs-string">        Format      regex</span><span class="hljs-string">        Regex       ^(?&lt;time&gt;[^ ]* &#123;1,2&#125;[^ ]* [^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;process&gt;[^ ]*)\: (?&lt;message&gt;.*)\$</span><span class="hljs-string">        Time_Key    time</span><span class="hljs-string">        Time_Format %b %d %H:%M:%S</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="ServiceAccount"><a href="#ServiceAccount" class="headerlink" title="ServiceAccount"></a>ServiceAccount</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="ClusterRole"><a href="#ClusterRole" class="headerlink" title="ClusterRole"></a>ClusterRole</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: ClusterRole</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">rules:</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - namespaces</span><span class="hljs-string">  - pods</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - watch</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="ClusterRoleBinding"><a href="#ClusterRoleBinding" class="headerlink" title="ClusterRoleBinding"></a>ClusterRoleBinding</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: ClusterRoleBinding</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">roleRef:</span><span class="hljs-string">  apiGroup: rbac.authorization.k8s.io</span><span class="hljs-string">  kind: ClusterRole</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">subjects:</span><span class="hljs-string">- kind: ServiceAccount</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: DaemonSet</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: fluent-bit-logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: fluent-bit-logging</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: fluent-bit-logging</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: varlog</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /var/log</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">        - name: varlibdockercontainers</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /var/lib/docker/containers</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">        - name: fluent-bit-config</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: fluent-bit-config</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: fluent-bit</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/ops/fluent-bit:1.8.0&#x27;</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - name: 2020tcp02</span><span class="hljs-string">              containerPort: 2020</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">          resources:</span><span class="hljs-string">            limits:</span><span class="hljs-string">              cpu: 500m</span><span class="hljs-string">              memory: 256Mi</span><span class="hljs-string">            requests:</span><span class="hljs-string">              cpu: 100m</span><span class="hljs-string">              memory: 256Mi</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: varlog</span><span class="hljs-string">              mountPath: /var/log</span><span class="hljs-string">            - name: varlibdockercontainers</span><span class="hljs-string">              readOnly: true</span><span class="hljs-string">              mountPath: /var/lib/docker/containers</span><span class="hljs-string">            - name: fluent-bit-config</span><span class="hljs-string">              mountPath: /fluent-bit/etc/</span><span class="hljs-string">          livenessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /</span><span class="hljs-string">              port: 2020</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            timeoutSeconds: 1</span><span class="hljs-string">            periodSeconds: 10</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          readinessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /api/v1/metrics/prometheus</span><span class="hljs-string">              port: 2020</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            timeoutSeconds: 1</span><span class="hljs-string">            periodSeconds: 10</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: Always</span><span class="hljs-string">          securityContext:</span><span class="hljs-string">            capabilities: &#123;&#125;</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 11</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      serviceAccountName: fluent-bit</span><span class="hljs-string">      serviceAccount: fluent-bit</span><span class="hljs-string">      securityContext: &#123;&#125;</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">      tolerations:</span><span class="hljs-string">        - key: node-role.kubernetes.io/master</span><span class="hljs-string">          operator: Exists</span><span class="hljs-string">          effect: NoSchedule</span><span class="hljs-string">        - operator: Exists</span><span class="hljs-string">          effect: NoExecute</span><span class="hljs-string">        - operator: Exists</span><span class="hljs-string">          effect: NoSchedule</span><span class="hljs-string">      dnsConfig:</span><span class="hljs-string">        options:</span><span class="hljs-string">          - name: single-request-reopen</span><span class="hljs-string">  updateStrategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">    rollingUpdate:</span><span class="hljs-string">      maxUnavailable: 3</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="ELK"><a href="#ELK" class="headerlink" title="ELK"></a>ELK</h1><h2 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h2><h3 id="Service-2"><a href="#Service-2" class="headerlink" title="Service"></a>Service</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - port: 9200</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: elasticsearch</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="ServiceAccount-1"><a href="#ServiceAccount-1" class="headerlink" title="ServiceAccount"></a>ServiceAccount</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: elasticsearch</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="ClusterRole-1"><a href="#ClusterRole-1" class="headerlink" title="ClusterRole"></a>ClusterRole</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ClusterRole</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: elasticsearch</span><span class="hljs-string">rules:</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - &quot;services&quot;</span><span class="hljs-string">  - &quot;namespaces&quot;</span><span class="hljs-string">  - &quot;endpoints&quot;</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - &quot;get&quot;</span></code></pre></div><h3 id="ClusterRoleBinding-1"><a href="#ClusterRoleBinding-1" class="headerlink" title="ClusterRoleBinding"></a>ClusterRoleBinding</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ClusterRoleBinding</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: elasticsearch</span><span class="hljs-string">subjects:</span><span class="hljs-string">- kind: ServiceAccount</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  apiGroup: &quot;&quot;</span><span class="hljs-string">roleRef:</span><span class="hljs-string">  kind: ClusterRole</span><span class="hljs-string">  name: elasticsearch</span><span class="hljs-string">  apiGroup: &quot;&quot;</span></code></pre></div><h3 id="StatefulSet-2"><a href="#StatefulSet-2" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: StatefulSet #使用statefulset创建Pod</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: elasticsearch #pod名称,使用statefulSet创建的Pod是有序号有顺序的</span><span class="hljs-string">  namespace: logging  #命名空间</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 1 #副本数量,单节点</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: elasticsearch #和pod template配置的labels相匹配</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: elasticsearch</span><span class="hljs-string">    spec:</span><span class="hljs-string">      serviceAccountName: elasticsearch</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      volumes:</span><span class="hljs-string">      - name: es-data</span><span class="hljs-string">        persistentVolumeClaim:</span><span class="hljs-string">          claimName: es-data</span><span class="hljs-string">      - name: localtime</span><span class="hljs-string">        hostPath:</span><span class="hljs-string">          path: /etc/localtime</span><span class="hljs-string">      containers:</span><span class="hljs-string">      - image: harbor.axzo.cn/ops/elasticsearch:8.14.1</span><span class="hljs-string">        name: elasticsearch</span><span class="hljs-string">        resources:</span><span class="hljs-string">          # need more cpu upon initialization, therefore burstable class</span><span class="hljs-string">          limits:</span><span class="hljs-string">            cpu: 1000m</span><span class="hljs-string">            memory: 2Gi</span><span class="hljs-string">          requests:</span><span class="hljs-string">            cpu: 100m</span><span class="hljs-string">            memory: 500Mi</span><span class="hljs-string">        ports:</span><span class="hljs-string">        - containerPort: 9200</span><span class="hljs-string">          protocol: TCP</span><span class="hljs-string">        volumeMounts:</span><span class="hljs-string">        - name: es-data</span><span class="hljs-string">          mountPath: /usr/share/elasticsearch/data/   #挂载点</span><span class="hljs-string">        - name: localtime</span><span class="hljs-string">          readOnly: true</span><span class="hljs-string">          mountPath: /etc/localtime</span><span class="hljs-string">        env:</span><span class="hljs-string">        - name: &quot;NAMESPACE&quot;</span><span class="hljs-string">          valueFrom:</span><span class="hljs-string">            fieldRef:</span><span class="hljs-string">              fieldPath: metadata.namespace</span><span class="hljs-string">        - name: &quot;discovery.type&quot;  #定义单节点类型</span><span class="hljs-string">          value: &quot;single-node&quot;</span><span class="hljs-string">        - name: ES_JAVA_OPTS #设置Java的内存参数，可以适当进行加大调整</span><span class="hljs-string">          value: &quot;-Xms512m -Xmx2g&quot;</span><span class="hljs-string">        - name: &quot;ELASTIC_PASSWORD&quot;</span><span class="hljs-string">          value: &quot;TvTOidLL3R9xEDN@&quot;</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="LogStash"><a href="#LogStash" class="headerlink" title="LogStash"></a>LogStash</h2><h3 id="ConfigMap-1"><a href="#ConfigMap-1" class="headerlink" title="ConfigMap"></a>ConfigMap</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os-configmap</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">data:</span><span class="hljs-string">  logstash.conf: |</span><span class="hljs-string">    input &#123;</span><span class="hljs-string">       kafka&#123;</span><span class="hljs-string">        bootstrap_servers =&gt; &quot;kafka:9092&quot;</span><span class="hljs-string">        topics =&gt; &quot;axzo-linux-os&quot;</span><span class="hljs-string">        consumer_threads =&gt; 10</span><span class="hljs-string">        decorate_events =&gt; true</span><span class="hljs-string">        codec =&gt; json</span><span class="hljs-string">        auto_offset_reset =&gt; &quot;latest&quot;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">    output &#123;</span><span class="hljs-string">      elasticsearch &#123;</span><span class="hljs-string">        hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><span class="hljs-string">        user =&gt; &quot;elastic&quot;</span><span class="hljs-string">        password =&gt; &quot;TvTOidLL3R9xEDN@&quot;</span><span class="hljs-string">        index =&gt; &quot;axzo-log-os-%&#123;+YYYY.MM.dd&#125;&quot;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">      stdout &#123;</span><span class="hljs-string">        codec =&gt; rubydebug</span><span class="hljs-string">      &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">  logstash.yml: |</span><span class="hljs-string">    http.host: &quot;0.0.0.0&quot;</span><span class="hljs-string">    path.config: /usr/share/logstash/pipeline</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: Deployment</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 1</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: logstash-os</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: logstash-os</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: config-volume</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.yml</span><span class="hljs-string">                path: logstash.yml</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: logstash-pipeline</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.conf</span><span class="hljs-string">                path: logstash.conf</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: localtime</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /etc/localtime</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: logstash</span><span class="hljs-string">          image: harbor.axzo.cn/ops/logstash:8.14.1</span><span class="hljs-string">          resources:</span><span class="hljs-string">            limits:</span><span class="hljs-string">              cpu: &#x27;1&#x27;</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">            requests:</span><span class="hljs-string">              cpu: 500m</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: config-volume</span><span class="hljs-string">              mountPath: /usr/share/logstash/config</span><span class="hljs-string">            - name: logstash-pipeline</span><span class="hljs-string">              mountPath: /usr/share/logstash/pipeline</span><span class="hljs-string">            - name: localtime</span><span class="hljs-string">              mountPath: /etc/localtime</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 30</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      securityContext: &#123;&#125;</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">  strategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">    rollingUpdate:</span><span class="hljs-string">      maxUnavailable: 25%</span><span class="hljs-string">      maxSurge: 25%</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">  progressDeadlineSeconds: 600</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h2><h3 id="Service-3"><a href="#Service-3" class="headerlink" title="Service"></a>Service</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kibana</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  type: NodePort #采用nodeport方式进行暴露，端口默认为25601</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 5601</span><span class="hljs-string">    nodePort: 32601</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: kibana</span><span class="hljs-string">EOF</span></code></pre></div><h3 id="Deployment-1"><a href="#Deployment-1" class="headerlink" title="Deployment"></a>Deployment</h3><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: Deployment</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kibana</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  labels:</span><span class="hljs-string">    app: kibana</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 1</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: kibana</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: kibana</span><span class="hljs-string">    spec:</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      volumes:</span><span class="hljs-string">      - name: localtime</span><span class="hljs-string">        hostPath:</span><span class="hljs-string">          path: /etc/localtime</span><span class="hljs-string">      containers:</span><span class="hljs-string">      - name: kibana</span><span class="hljs-string">        image: harbor.axzo.cn/ops/kibana:8.14.1</span><span class="hljs-string">        resources:</span><span class="hljs-string">          # need more cpu upon initialization, therefore burstable class</span><span class="hljs-string">          limits:</span><span class="hljs-string">            cpu: 1000m</span><span class="hljs-string">          requests:</span><span class="hljs-string">            cpu: 100m</span><span class="hljs-string">        env:</span><span class="hljs-string">          - name: ELASTICSEARCH_HOSTS</span><span class="hljs-string">            value: &quot;http://elasticsearch:9200&quot;</span><span class="hljs-string">          - name: ELASTICSEARCH_URL</span><span class="hljs-string">            value: &quot;http://elasticsearch:9200&quot;</span><span class="hljs-string">          - name: ELASTICSEARCH_USERNAME</span><span class="hljs-string">            value: &quot;kibana&quot;</span><span class="hljs-string">          - name: ELASTICSEARCH_PASSWORD</span><span class="hljs-string">            value: &quot;TvTOidLL3R9xEDN@&quot;</span><span class="hljs-string">        ports:</span><span class="hljs-string">        - containerPort: 5601</span><span class="hljs-string">          protocol: TCP</span><span class="hljs-string">        volumeMounts:</span><span class="hljs-string">        - name: localtime</span><span class="hljs-string">          readOnly: true</span><span class="hljs-string">          mountPath: /etc/localtime</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-EndPoint使用示例</title>
    <link href="/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
    <url>/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h1><p><img src="/hexo/images/k8s/endpoint.png"></p><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-prd-rds-master</span><span class="hljs-string">  namespace: prod</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">    targetPort: 3306</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Endpoints</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-prd-rds-master</span><span class="hljs-string">  namespace: prod</span><span class="hljs-string">subsets:</span><span class="hljs-string">- addresses:</span><span class="hljs-string">  - ip: 192.168.1.99</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-prd-rds-readonly</span><span class="hljs-string">  namespace: prod</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">    targetPort: 3306</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Endpoints</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-prd-rds-readonly</span><span class="hljs-string">  namespace: prod</span><span class="hljs-string">subsets:</span><span class="hljs-string">- addresses:</span><span class="hljs-string">  - ip: 192.168.1.62</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP    </span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-安装</title>
    <link href="/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><div class="code-wrapper"><pre><code class="hljs bash">hostnamectl set-hostname k8s-nodemodprobe overlaymodprobe br_netfilter<span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/modules-load.d/containerd.conf</span><span class="hljs-string">overlay</span><span class="hljs-string">br_netfilter</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/sysctl.d/99-kubernetes-cri.conf</span><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><span class="hljs-string">net.ipv4.ip_forward = 1</span><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/hosts</span><span class="hljs-string">192.168.10.242 k8s-master</span><span class="hljs-string">192.168.10.245 k8s-node1</span><span class="hljs-string">192.168.10.246 k8s-node2</span><span class="hljs-string">192.168.10.247 k8s-node3</span><span class="hljs-string">EOF</span>sysctl --systemsystemctl stop firewalldsystemctl <span class="hljs-built_in">disable</span> firewalldsystemctl unmask firewalld</code></pre></div><h2 id="安装Containerd"><a href="#安装Containerd" class="headerlink" title="安装Containerd"></a>安装Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repodnf updatednf install -y containerd</code></pre></div><h2 id="配置Containerd"><a href="#配置Containerd" class="headerlink" title="配置Containerd"></a>配置Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /etc/containerdcontainerd config default &gt; /etc/containerd/config.tomlsed -i <span class="hljs-string">&#x27;s/SystemdCgroup = false/SystemdCgroup = true/g&#x27;</span> /etc/containerd/config.toml</code></pre></div><h2 id="重启containerd"><a href="#重启containerd" class="headerlink" title="重启containerd"></a>重启containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl daemon-reloadsystemctl restart containerdsystemctl <span class="hljs-built_in">enable</span> --now containerdsystemctl status containerd</code></pre></div><h2 id="安装kubeadm"><a href="#安装kubeadm" class="headerlink" title="安装kubeadm"></a>安装kubeadm</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/yum.repos.d/kubernetes.repo</span><span class="hljs-string">[kubernetes]</span><span class="hljs-string">name=Kubernetes</span><span class="hljs-string">baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/</span><span class="hljs-string">enabled=1</span><span class="hljs-string">gpgcheck=1</span><span class="hljs-string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key</span><span class="hljs-string">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni</span><span class="hljs-string">EOF</span>dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetessystemctl <span class="hljs-built_in">enable</span> --now kubelet</code></pre></div><h2 id="master节点执行"><a href="#master节点执行" class="headerlink" title="master节点执行"></a>master节点执行</h2><div class="code-wrapper"><pre><code class="hljs bash">kubeadm init \--apiserver-advertise-address=192.168.10.242 \--image-repository registry.aliyuncs.com/google_containers \--service-cidr=10.96.0.0/12 \--pod-network-cidr=10.244.0.0/16</code></pre></div><p>执行成功</p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</code></pre></div><h2 id="将其他node加入集群"><a href="#将其他node加入集群" class="headerlink" title="将其他node加入集群"></a>将其他node加入集群</h2><p>在其他节点执行</p><div class="code-wrapper"><pre><code class="hljs bash">kubeadm <span class="hljs-built_in">join</span> 192.168.10.242:6443 --token ijblbd.bmnaf8xcl38iwxbz \--discovery-token-ca-cert-hash sha256:1d76ad35d2d95c6b381ada3d03b15f230201e9e0af41db4db33700d7de604e1d</code></pre></div><h2 id="部署CNI网络组件"><a href="#部署CNI网络组件" class="headerlink" title="部署CNI网络组件"></a>部署CNI网络组件</h2><div class="code-wrapper"><pre><code class="hljs bash">wget https://docs.projectcalico.org/manifests/calico.yaml- 修改IPV4POOL地址kubectl create -f calico.yaml</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
