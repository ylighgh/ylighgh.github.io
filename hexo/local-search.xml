<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>APISIX-数据备份与恢复</title>
    <link href="/hexo/2024/06/11/APISIX-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/"/>
    <url>/hexo/2024/06/11/APISIX-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><div class="code-wrapper"><pre><code class="hljs bash">ETCDCTL_API=3 etcdctl snapshot save snapshot.dbETCDCTL_API=3 etcdctl  snapshot status snapshot.db -w=table</code></pre></div><h1 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h1><h2 id="将备份数据放进etcd容器"><a href="#将备份数据放进etcd容器" class="headerlink" title="将备份数据放进etcd容器"></a>将备份数据放进etcd容器</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl -n pro-apisix <span class="hljs-built_in">cp</span> snapshot.db pro-apisix-etcd-0:/tmp/kubectl -n pro-apisix <span class="hljs-built_in">cp</span> snapshot.db pro-apisix-etcd-1:/tmp/kubectl -n pro-apisix <span class="hljs-built_in">cp</span> snapshot.db pro-apisix-etcd-2:/tmp/</code></pre></div><h2 id=""><a href="#" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">initContainers:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data-restore</span>    <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;harbor.axzo.cn/ops/etcd:3.5.4-debian-11-r14&#x27;</span>    <span class="hljs-attr">command:</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/bash</span>    <span class="hljs-attr">args:</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;-c&#x27;</span>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;rm -rf /bitnami/etcd/data/* &amp;&amp; etcdctl snapshot restore /restore-volume/20240617_030015_apisix_snapshot.db --name $(MY_POD_NAME) --data-dir=/bitnami/etcd/data --initial-cluster pro-apisix-etcd-0=http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-1=http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-2=http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380 --initial-cluster-token etcd-cluster-k8s --initial-advertise-peer-urls http://$(MY_POD_NAME).pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380&#x27;</span>    <span class="hljs-attr">env:</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">MY_POD_NAME</span>        <span class="hljs-attr">valueFrom:</span>          <span class="hljs-attr">fieldRef:</span>            <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>            <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.name</span>    <span class="hljs-attr">resources:</span> &#123;&#125;    <span class="hljs-attr">volumeMounts:</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span>        <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/bitnami/etcd</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restore-volume</span>        <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/restore-volume</span>    <span class="hljs-attr">terminationMessagePath:</span> <span class="hljs-string">/dev/termination-log</span>    <span class="hljs-attr">terminationMessagePolicy:</span> <span class="hljs-string">File</span>    <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span></code></pre></div><h2 id="pro-apisix-etcd-0"><a href="#pro-apisix-etcd-0" class="headerlink" title="pro-apisix-etcd-0"></a>pro-apisix-etcd-0</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl <span class="hljs-built_in">exec</span> -it -n pro-apisix pro-apisix-etcd-0 -- bash<span class="hljs-built_in">cd</span> /tmp<span class="hljs-built_in">rm</span> -rf /bitnami/etcd/data/*ETCDCTL_API=3 etcdctl snapshot restore snapshot.db \--name pro-apisix-etcd-0 \--data-dir=<span class="hljs-string">&quot;/bitnami/etcd/data&quot;</span> \--initial-cluster pro-apisix-etcd-0=http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-1=http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-2=http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380 \--initial-advertise-peer-urls http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380</code></pre></div><h2 id="pro-apisix-etcd-1"><a href="#pro-apisix-etcd-1" class="headerlink" title="pro-apisix-etcd-1"></a>pro-apisix-etcd-1</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl <span class="hljs-built_in">exec</span> -it -n pro-apisix pro-apisix-etcd-1 -- bash<span class="hljs-built_in">cd</span> /tmp<span class="hljs-built_in">rm</span> -rf /bitnami/etcd/data/*ETCDCTL_API=3 etcdctl snapshot restore snapshot.db \--name pro-apisix-etcd-1 \--data-dir=<span class="hljs-string">&quot;/bitnami/etcd/data&quot;</span> \--initial-cluster pro-apisix-etcd-0=http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-1=http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-2=http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380 \--initial-advertise-peer-urls http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380</code></pre></div><h2 id="pro-apisix-etcd-2"><a href="#pro-apisix-etcd-2" class="headerlink" title="pro-apisix-etcd-2"></a>pro-apisix-etcd-2</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl <span class="hljs-built_in">exec</span> -it -n pro-apisix pro-apisix-etcd-2 -- bash<span class="hljs-built_in">cd</span> /tmp<span class="hljs-built_in">rm</span> -rf /bitnami/etcd/data/*ETCDCTL_API=3 etcdctl snapshot restore snapshot.db \--name pro-apisix-etcd-2 \--data-dir=<span class="hljs-string">&quot;/bitnami/etcd/data&quot;</span> \--initial-cluster pro-apisix-etcd-0=http://pro-apisix-etcd-0.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-1=http://pro-apisix-etcd-1.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380,pro-apisix-etcd-2=http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380 \--initial-advertise-peer-urls http://pro-apisix-etcd-2.pro-apisix-etcd-headless.pro-apisix.svc.cluster.local:2380</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>APISIX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>APISIX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Filebeat安装</title>
    <link href="/hexo/2024/06/11/ELK-Filebeat/"/>
    <url>/hexo/2024/06/11/ELK-Filebeat/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.14/filebeat-installation-configuration.html">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/downloadswget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.14.2-x86_64.rpm -O ~/downloads/filebeat-7.14.2-x86_64.rpmyum install -y ~/downloads/filebeat-7.14.2-x86_64.rpm</code></pre></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml.default</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FluentBit安装</title>
    <link href="/hexo/2024/06/11/ELK-FluentBit/"/>
    <url>/hexo/2024/06/11/ELK-FluentBit/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://docs.fluentbit.io/manual/installation/getting-started-with-fluent-bit">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/fluent/fluent-bit/master/install.sh | sh</code></pre></div><h1 id="备份默认文件"><a href="#备份默认文件" class="headerlink" title="备份默认文件"></a>备份默认文件</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/fluent-bit/fluent-bit.conf /etc/fluent-bit/fluent-bit.conf.default<span class="hljs-built_in">cp</span> /etc/fluent-bit/parsers.conf /etc/fluent-bit/fparsers.conf.default</code></pre></div><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><h2 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> IP=x.x.x.x</code></pre></div><h2 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/fluent-bit.conf</span><span class="hljs-string">[SERVICE]</span><span class="hljs-string">    flush        1</span><span class="hljs-string">    daemon       Off</span><span class="hljs-string">    log_level    info</span><span class="hljs-string">    parsers_file parsers.conf</span><span class="hljs-string">    plugins_file plugins.conf</span><span class="hljs-string"></span><span class="hljs-string">@INCLUDE secure-input.conf</span><span class="hljs-string">@INCLUDE secure-filter.conf</span><span class="hljs-string">@INCLUDE secure-output.conf</span><span class="hljs-string">@INCLUDE messages-input.conf</span><span class="hljs-string">@INCLUDE messages-filter.conf</span><span class="hljs-string">@INCLUDE messages-output.conf</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="增加parser配置"><a href="#增加parser配置" class="headerlink" title="增加parser配置"></a>增加parser配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/fluent-bit/parsers.conf</span><span class="hljs-string"></span><span class="hljs-string">[PARSER]</span><span class="hljs-string">    Name axzo-os-log</span><span class="hljs-string">    Format regex</span><span class="hljs-string">    Regex ^(?&lt;time&gt;[^ ]* &#123;1,2&#125;[^ ]* [^ ]*) (?&lt;hostname&gt;[^ ]*) (?&lt;process&gt;[^ ]*)\: (?&lt;message&gt;.*)$</span><span class="hljs-string">    Time_Key    time</span><span class="hljs-string">    Time_Format %b %d %H:%M:%S</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集secure日志配置"><a href="#采集secure日志配置" class="headerlink" title="采集secure日志配置"></a>采集secure日志配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/secure</span><span class="hljs-string">    Tag kube-secure.*</span><span class="hljs-string">    DB                /var/log/flb_kube_secure.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Regex log /.*sshd.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-secure.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-secure-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集message-kernel日志"><a href="#采集message-kernel日志" class="headerlink" title="采集message kernel日志"></a>采集message kernel日志</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/messages</span><span class="hljs-string">    Tag kube-messages.*</span><span class="hljs-string">    DB                /var/log/flb_kube_messages.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/messages-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Regex log /.*kernel.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-messages.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-messages-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><div class="code-wrapper"><pre><code class="hljs bash">systemctl start fluent-bitsystemctl <span class="hljs-built_in">enable</span> fluent-bitsystemctl status fluent-bit</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-常用Shell命令</title>
    <link href="/hexo/2024/06/11/Linux-%E5%B8%B8%E7%94%A8Shell%E5%91%BD%E4%BB%A4/"/>
    <url>/hexo/2024/06/11/Linux-%E5%B8%B8%E7%94%A8Shell%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="批量删除pods"><a href="#批量删除pods" class="headerlink" title="批量删除pods"></a>批量删除pods</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl --kubeconfig gxq-config get pods -A|grep Evicted|awk <span class="hljs-string">&#x27;&#123;print $1&quot; &quot;$2&#125;&#x27;</span>|<span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> LINE<span class="hljs-keyword">do</span>    namespace=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$LINE</span>|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`    pod=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$LINE</span>|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`    kubectl --kubeconfig gxq-config delete pod -n <span class="hljs-variable">$namespace</span> <span class="hljs-variable">$pod</span><span class="hljs-keyword">done</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-Service/Ingress</title>
    <link href="/hexo/2024/05/29/Kubernetes-Service/"/>
    <url>/hexo/2024/05/29/Kubernetes-Service/</url>
    
    <content type="html"><![CDATA[<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Kubernetes 中 Service 是 将运行在一个或一组 Pod 上的网络应用程序公开为网络服务的方法。</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><ul><li>ClusterIP</li><li>ExternalName: 返回定义的CNAME别名，可以配置为域名</li><li>NodePort: 所有node上绑定一个端口 在任意一个节点+端口号都能访问</li><li>LoadBalancer: 负载均衡器</li></ul><h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>Ingress 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。</p><p>Ingress 可以提供负载均衡、SSL 终结和基于名称的虚拟托管。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="添加Helm仓库"><a href="#添加Helm仓库" class="headerlink" title="添加Helm仓库"></a>添加Helm仓库</h3><div class="code-wrapper"><pre><code class="hljs bash">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</code></pre></div><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><div class="code-wrapper"><pre><code class="hljs bash">helm pull ingress-nginx/ingress-nginxtar xf ingress-nginx-4.10.1.tgz</code></pre></div><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ingress-nginxhelm install ingress-nginx --create-namespace -n ingress-nginx .</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-存储与配置</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl create configmap -h</code></pre></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><p>直接挂载</p></li><li><p>文件挂载</p></li></ul><h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><h2 id="使用类型"><a href="#使用类型" class="headerlink" title="使用类型"></a>使用类型</h2><ul><li>docker-registry</li><li>tls</li></ul><h1 id="SubPath"><a href="#SubPath" class="headerlink" title="SubPath"></a>SubPath</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-常用YAML</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E5%B8%B8%E7%94%A8yaml/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E5%B8%B8%E7%94%A8yaml/</url>
    
    <content type="html"><![CDATA[<h1 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h1><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: Deployment</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  replicas: 1</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: logstash-os</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: logstash-os</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: config-volume</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.yml</span><span class="hljs-string">                path: logstash.yml</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: logstash-pipeline</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: logstash-os-configmap</span><span class="hljs-string">            items:</span><span class="hljs-string">              - key: logstash.conf</span><span class="hljs-string">                path: logstash.conf</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">        - name: localtime</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /etc/localtime</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: logstash</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/ops/logstash:7.14.0&#x27;</span><span class="hljs-string">          resources:</span><span class="hljs-string">            limits:</span><span class="hljs-string">              cpu: &#x27;1&#x27;</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">            requests:</span><span class="hljs-string">              cpu: 500m</span><span class="hljs-string">              memory: 1Gi</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: config-volume</span><span class="hljs-string">              mountPath: /usr/share/logstash/config</span><span class="hljs-string">            - name: logstash-pipeline</span><span class="hljs-string">              mountPath: /usr/share/logstash/pipeline</span><span class="hljs-string">            - name: localtime</span><span class="hljs-string">              mountPath: /etc/localtime</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: IfNotPresent</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 30</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      securityContext: &#123;&#125;</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">  strategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">    rollingUpdate:</span><span class="hljs-string">      maxUnavailable: 25%</span><span class="hljs-string">      maxSurge: 25%</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">  progressDeadlineSeconds: 600</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: ConfigMap</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: logstash-os-configmap</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">data:</span><span class="hljs-string">  logstash.conf: |</span><span class="hljs-string">    input&#123;</span><span class="hljs-string">      kafka&#123;</span><span class="hljs-string">        bootstrap_servers =&gt; &quot;192.168.1.9:9091,192.168.1.9:9092,192.168.1.9:9093&quot;</span><span class="hljs-string">        topics =&gt; [&quot;os-secure-logs&quot;, &quot;os-messages-logs&quot;]</span><span class="hljs-string">        consumer_threads =&gt; 1</span><span class="hljs-string">        decorate_events =&gt; true</span><span class="hljs-string">        codec =&gt; json</span><span class="hljs-string">        auto_offset_reset =&gt; &quot;latest&quot;</span><span class="hljs-string">     &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">    filter&#123;</span><span class="hljs-string">      ruby &#123; </span><span class="hljs-string">              code =&gt; &quot;event.set(&#x27;timestamp&#x27;, event.get(&#x27;@timestamp&#x27;).time.localtime - 8*60*60)&quot; </span><span class="hljs-string">          &#125;</span><span class="hljs-string">        mutate &#123;</span><span class="hljs-string">            remove_field =&gt; [&quot;@version&quot;, &quot;@timestamp&quot;]</span><span class="hljs-string">        &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">    output &#123;</span><span class="hljs-string">      stdout &#123; </span><span class="hljs-string">         codec  =&gt; rubydebug &#123;</span><span class="hljs-string">           metadata =&gt; true</span><span class="hljs-string">         &#125;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">      if &quot;os-secure-logs&quot; == [@metadata][kafka][topic] &#123;</span><span class="hljs-string">        elasticsearch &#123;</span><span class="hljs-string">          hosts =&gt; [&quot;192.168.1.65:9200&quot;,&quot;192.168.1.150:9200&quot;,&quot;192.168.1.32:9200&quot;,&quot;192.168.1.44:9200&quot;,&quot;192.168.1.89:9200&quot;]</span><span class="hljs-string">          user =&gt; &quot;elastic&quot;</span><span class="hljs-string">          password =&gt; &quot;axzo@2021&quot;</span><span class="hljs-string">          index =&gt; &quot;logstash-os-secure-%&#123;+YYYY.MM.dd&#125;&quot;</span><span class="hljs-string">        &#125;</span><span class="hljs-string">      &#125; else &#123;</span><span class="hljs-string">        elasticsearch &#123;</span><span class="hljs-string">          hosts =&gt; [&quot;192.168.1.65:9200&quot;,&quot;192.168.1.150:9200&quot;,&quot;192.168.1.32:9200&quot;,&quot;192.168.1.44:9200&quot;,&quot;192.168.1.89:9200&quot;]</span><span class="hljs-string">          user =&gt; &quot;elastic&quot;</span><span class="hljs-string">          password =&gt; &quot;axzo@2021&quot;</span><span class="hljs-string">          index =&gt; &quot;logstash-os-messages-%&#123;+YYYY.MM.dd&#125;&quot;</span><span class="hljs-string">        &#125;</span><span class="hljs-string">      &#125;</span><span class="hljs-string">    &#125;</span><span class="hljs-string">  logstash.yml: |</span><span class="hljs-string">    http.host: &quot;0.0.0.0&quot;</span><span class="hljs-string">    path.config: /usr/share/logstash/pipeline</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="PVC"><a href="#PVC" class="headerlink" title="PVC"></a>PVC</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: PersistentVolumeClaim</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: pro-apisix-plugins</span><span class="hljs-string">  namespace: pro-apisix</span><span class="hljs-string">  annotations:</span><span class="hljs-string">    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner</span><span class="hljs-string">spec:</span><span class="hljs-string">  accessModes:</span><span class="hljs-string">    - ReadWriteMany</span><span class="hljs-string">  resources:</span><span class="hljs-string">    requests:</span><span class="hljs-string">      storage: 2Gi</span><span class="hljs-string">  storageClassName: sfsturbo-k8s-sc</span><span class="hljs-string">  volumeMode: Filesystem</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-持久化存储</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="HostPath"><a href="#HostPath" class="headerlink" title="HostPath"></a>HostPath</h1><h1 id="EmptyDir"><a href="#EmptyDir" class="headerlink" title="EmptyDir"></a>EmptyDir</h1><h1 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h1><h2 id="安装NFS"><a href="#安装NFS" class="headerlink" title="安装NFS"></a>安装NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">yum -y install nfs-utils</code></pre></div><h2 id="启动NFS"><a href="#启动NFS" class="headerlink" title="启动NFS"></a>启动NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl start nfs-serversystemctl <span class="hljs-built_in">enable</span> nfs-server</code></pre></div><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /data/nfs/ro<span class="hljs-built_in">mkdir</span> -p /data/nfs/rw</code></pre></div><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/exports</span><span class="hljs-string">/data/nfs/rw 192.168.10.0/24(rw,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">/data/nfs/ro 192.168.10.0/24(ro,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">EOF</span>exportfs -rsystemctl restart nfs-server</code></pre></div><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /mnt/nfs/rwmount -t nfs 192.168.10.245:/data/nfs/rw /mnt/nfs/rw/</code></pre></div><h1 id="PV-PVC"><a href="#PV-PVC" class="headerlink" title="PV&#x2F;PVC"></a>PV&#x2F;PVC</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-日志采集</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="容器日志采集"><a href="#容器日志采集" class="headerlink" title="容器日志采集"></a>容器日志采集</h1><p>基于 FluentBit + Kafka + ELK 的日志采集系统</p><h1 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h1><div class="code-wrapper"><pre><code class="hljs bash">kubectl create ns logging</code></pre></div><h1 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h1><h2 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: StatefulSet</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: zookeeper</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: zookeeper</span><span class="hljs-string">  serviceName: zookeeper</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: zookeeper</span><span class="hljs-string">    spec:</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: zookeeper</span><span class="hljs-string">          image: harbor.axzo.cn/ops/zookeeper:3.9.2</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - containerPort: 2181</span><span class="hljs-string">              name: zookeeperclient</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: zookeeper   # 与serviceName 同名</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - port: 2181</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: zookeeper</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">kind: StatefulSet</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kafka</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      app: kafka</span><span class="hljs-string">  serviceName: kafka</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        app: kafka</span><span class="hljs-string">    spec:</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: kafka</span><span class="hljs-string">          image: harbor.axzo.cn/ops/kafka:3.3.2</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - containerPort: 9092</span><span class="hljs-string">              name: service</span><span class="hljs-string">          env:</span><span class="hljs-string">            - name: ALLOW_ANONYMOUS_LOGIN</span><span class="hljs-string">              value: &quot;yes&quot;</span><span class="hljs-string">            - name: KAFKA_CFG_ZOOKEEPER_CONNECT</span><span class="hljs-string">              value: &quot;zookeeper:2181&quot;</span><span class="hljs-string">            - name: ALLOW_PLAINTEXT_LISTENER</span><span class="hljs-string">              value: &quot;yes&quot;</span><span class="hljs-string">---</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: kafka</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">spec:</span><span class="hljs-string">  clusterIP: None</span><span class="hljs-string">  ports:</span><span class="hljs-string">    - port: 9092</span><span class="hljs-string">  selector:</span><span class="hljs-string">    app: kafka</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 创建topic</span>kubectl <span class="hljs-built_in">exec</span> -it kafka-0 -n logging -- /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic k8s-logs<span class="hljs-comment"># 列出topic</span>kubectl <span class="hljs-built_in">exec</span> -it kafka-0 -n logging -- /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092</code></pre></div><h1 id="FluentBit"><a href="#FluentBit" class="headerlink" title="FluentBit"></a>FluentBit</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><div class="code-wrapper"><pre><code class="hljs perl">kubectl apply -f - &lt;&lt;EOFkind: ConfigMapapiVersion: v1metadata:  name: fluent-bit-config  namespace: logging  labels:    k8s-app: fluent-bitdata:  filter.conf: |-    [FILTER]        Name                kubernetes        Match               kube.*        Kube_URL            https:<span class="hljs-regexp">//</span>kubernetes.default.svc:<span class="hljs-number">443</span>        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token        Kube_Tag_Prefix     kube.var.log.containers.        Merge_Log           On        K8S-Logging.Parser  On        K8S-Logging.Exclude Off        Annotations         Off    [FILTER]        Name           <span class="hljs-keyword">grep</span>        Match          kube.*        regex         \$kubernetes[<span class="hljs-string">&#x27;labels&#x27;</span>][<span class="hljs-string">&#x27;logging&#x27;</span>] true    [FILTER]        Name record_modifier        Match kube.*        Remove_key kubernetes.container*        Remove_key kubernetes.pod_id        Remove_key kubernetes.docker_id        Remove_key kubernetes.labels        Remove_key <span class="hljs-keyword">log</span>  fluent-bit.conf: |-    [SERVICE]        Flush         <span class="hljs-number">1</span>        Log_Level     info        Daemon        off        Parsers_File  parsers.conf        HTTP_Server   On        HTTP_Listen   <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>        HTTP_Port     <span class="hljs-number">2020</span>    @INCLUDE input.conf    @INCLUDE filter.conf    @INCLUDE output-kafka.conf  input.conf: |-    [INPUT]        Name              tail        Tag               kube.*        Path              /var/<span class="hljs-keyword">log</span>/containers/*.log        Parser            docker        DB                /var/<span class="hljs-keyword">log</span>/flb_kube.db        Mem_Buf_Limit     <span class="hljs-number">1</span>MB        Skip_Long_Lines   On        Refresh_Interval  <span class="hljs-number">10</span>  output-kafka.conf: |-    [OUTPUT]        Name           kafka        Match          kube.*        Brokers        kafka:<span class="hljs-number">9092</span>        Topics         k8s-logs        Timestamp_Key  @timestamp        Timestamp_Format iso8601        Retry_Limit    false        <span class="hljs-comment"># hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span>        rdkafka.log.connection.close false        <span class="hljs-comment"># producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span>        rdkafka.queue.buffering.max.kbytes <span class="hljs-number">20240</span>        <span class="hljs-comment"># for logs you&#x27;ll probably want this ot be 0 or 1, not more</span>        rdkafka.request.required.acks <span class="hljs-number">1</span>  parsers.conf: |-    [PARSER]        Name axzo_json        Format json    [PARSER]        Name   apache        Format regex        Regex  ^(?&lt;host&gt;[^ ]*) [^ ]* (?&lt;user&gt;[^ ]*) \[(?&lt;<span class="hljs-keyword">time</span>&gt;[^\]]*)\] <span class="hljs-string">&quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^\&quot;]*?)(?: +\S*)?)?&quot;</span> (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: <span class="hljs-string">&quot;(?&lt;referer&gt;[^\&quot;]*)&quot;</span> <span class="hljs-string">&quot;(?&lt;agent&gt;[^\&quot;]*)&quot;</span>)?\$        Time_Key <span class="hljs-keyword">time</span>        Time_Format %d/%b/%Y:%H:%M:%S %z    [PARSER]        Name   apache2        Format regex        Regex  ^(?&lt;host&gt;[^ ]*) [^ ]* (?&lt;user&gt;[^ ]*) \[(?&lt;<span class="hljs-keyword">time</span>&gt;[^\]]*)\] <span class="hljs-string">&quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^ ]*) +\S*)?&quot;</span> (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: <span class="hljs-string">&quot;(?&lt;referer&gt;[^\&quot;]*)&quot;</span> <span class="hljs-string">&quot;(?&lt;agent&gt;[^\&quot;]*)&quot;</span>)?\$        Time_Key <span class="hljs-keyword">time</span>        Time_Format %d/%b/%Y:%H:%M:%S %z    [PARSER]        Name   apache_error        Format regex        Regex  ^\[[^ ]* (?&lt;<span class="hljs-keyword">time</span>&gt;[^\]]*)\] \[(?&lt;level&gt;[^\]]*)\](?: \[pid (?&lt;pid&gt;[^\]]*)\])?( \[client (?&lt;client&gt;[^\]]*)\])? (?&lt;message&gt;.*)\$    [PARSER]        Name   nginx        Format regex        Regex ^(?&lt;remote&gt;[^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;user&gt;[^ ]*) \[(?&lt;<span class="hljs-keyword">time</span>&gt;[^\]]*)\] <span class="hljs-string">&quot;(?&lt;method&gt;\S+)(?: +(?&lt;path&gt;[^\&quot;]*?)(?: +\S*)?)?&quot;</span> (?&lt;code&gt;[^ ]*) (?&lt;size&gt;[^ ]*)(?: <span class="hljs-string">&quot;(?&lt;referer&gt;[^\&quot;]*)&quot;</span> <span class="hljs-string">&quot;(?&lt;agent&gt;[^\&quot;]*)&quot;</span>)?\$        Time_Key <span class="hljs-keyword">time</span>        Time_Format %d/%b/%Y:%H:%M:%S %z    [PARSER]        Name   json        Format json        Time_Key <span class="hljs-keyword">time</span>        Time_Format %d/%b/%Y:%H:%M:%S %z    [PARSER]        Name        docker        Format      json        Time_Key    <span class="hljs-keyword">time</span>        Time_Format %Y-%m-%dT%H:%M:%S.%L        Time_Keep   On    [PARSER]        Name        syslog        Format      regex        Regex       ^\&lt;(?&lt;pri&gt;[<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]+)\&gt;(?&lt;<span class="hljs-keyword">time</span>&gt;[^ ]* &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>&#125;[^ ]* [^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;ident&gt;[a-zA-Z<span class="hljs-number">0</span>-<span class="hljs-number">9_</span>\/\.\-]*)(?:\[(?&lt;pid&gt;[<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]+)\])?(?:[^\:]*\:)? *(?&lt;message&gt;.*)\$        Time_Key    <span class="hljs-keyword">time</span>        Time_Format %b %d %H:%M:%S    [PARSER]        Name        axzo-os-<span class="hljs-keyword">log</span>        Format      regex        Regex       ^(?&lt;<span class="hljs-keyword">time</span>&gt;[^ ]* &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>&#125;[^ ]* [^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;process&gt;[^ ]*)\: (?&lt;message&gt;.*)\$        Time_Key    <span class="hljs-keyword">time</span>        Time_Format %b %d %H:%M:%SEOF</code></pre></div><h2 id="Serviceaccount"><a href="#Serviceaccount" class="headerlink" title="Serviceaccount"></a>Serviceaccount</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: ServiceAccount</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="clusterroles"><a href="#clusterroles" class="headerlink" title="clusterroles"></a>clusterroles</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: ClusterRole</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">rules:</span><span class="hljs-string">- apiGroups:</span><span class="hljs-string">  - &quot;&quot;</span><span class="hljs-string">  resources:</span><span class="hljs-string">  - namespaces</span><span class="hljs-string">  - pods</span><span class="hljs-string">  verbs:</span><span class="hljs-string">  - get</span><span class="hljs-string">  - list</span><span class="hljs-string">  - watch</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="clusterrolebindings"><a href="#clusterrolebindings" class="headerlink" title="clusterrolebindings"></a>clusterrolebindings</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: rbac.authorization.k8s.io/v1</span><span class="hljs-string">kind: ClusterRoleBinding</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">roleRef:</span><span class="hljs-string">  apiGroup: rbac.authorization.k8s.io</span><span class="hljs-string">  kind: ClusterRole</span><span class="hljs-string">  name: fluent-bit-read</span><span class="hljs-string">subjects:</span><span class="hljs-string">- kind: ServiceAccount</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">kind: DaemonSet</span><span class="hljs-string">apiVersion: apps/v1</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: fluent-bit</span><span class="hljs-string">  namespace: logging</span><span class="hljs-string">  labels:</span><span class="hljs-string">    k8s-app: fluent-bit-logging</span><span class="hljs-string">    kubernetes.io/cluster-service: &#x27;true&#x27;</span><span class="hljs-string">    version: v1</span><span class="hljs-string">spec:</span><span class="hljs-string">  selector:</span><span class="hljs-string">    matchLabels:</span><span class="hljs-string">      k8s-app: fluent-bit-logging</span><span class="hljs-string">  template:</span><span class="hljs-string">    metadata:</span><span class="hljs-string">      labels:</span><span class="hljs-string">        k8s-app: fluent-bit-logging</span><span class="hljs-string">        kubernetes.io/cluster-service: &#x27;true&#x27;</span><span class="hljs-string">        version: v1</span><span class="hljs-string">    spec:</span><span class="hljs-string">      volumes:</span><span class="hljs-string">        - name: varlog</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /var/log</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">        - name: varlibdockercontainers</span><span class="hljs-string">          hostPath:</span><span class="hljs-string">            path: /var/lib/docker/containers</span><span class="hljs-string">            type: &#x27;&#x27;</span><span class="hljs-string">        - name: fluent-bit-config</span><span class="hljs-string">          configMap:</span><span class="hljs-string">            name: fluent-bit-config</span><span class="hljs-string">            defaultMode: 420</span><span class="hljs-string">      containers:</span><span class="hljs-string">        - name: fluent-bit</span><span class="hljs-string">          image: &#x27;harbor.axzo.cn/ops/fluent-bit:1.8.0&#x27;</span><span class="hljs-string">          ports:</span><span class="hljs-string">            - name: 2020tcp02</span><span class="hljs-string">              containerPort: 2020</span><span class="hljs-string">              protocol: TCP</span><span class="hljs-string">          resources:</span><span class="hljs-string">            limits:</span><span class="hljs-string">              cpu: 500m</span><span class="hljs-string">              memory: 256Mi</span><span class="hljs-string">            requests:</span><span class="hljs-string">              cpu: 100m</span><span class="hljs-string">              memory: 256Mi</span><span class="hljs-string">          volumeMounts:</span><span class="hljs-string">            - name: varlog</span><span class="hljs-string">              mountPath: /var/log</span><span class="hljs-string">            - name: varlibdockercontainers</span><span class="hljs-string">              readOnly: true</span><span class="hljs-string">              mountPath: /var/lib/docker/containers</span><span class="hljs-string">            - name: fluent-bit-config</span><span class="hljs-string">              mountPath: /fluent-bit/etc/</span><span class="hljs-string">          livenessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /</span><span class="hljs-string">              port: 2020</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            timeoutSeconds: 1</span><span class="hljs-string">            periodSeconds: 10</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          readinessProbe:</span><span class="hljs-string">            httpGet:</span><span class="hljs-string">              path: /api/v1/metrics/prometheus</span><span class="hljs-string">              port: 2020</span><span class="hljs-string">              scheme: HTTP</span><span class="hljs-string">            timeoutSeconds: 1</span><span class="hljs-string">            periodSeconds: 10</span><span class="hljs-string">            successThreshold: 1</span><span class="hljs-string">            failureThreshold: 3</span><span class="hljs-string">          terminationMessagePath: /dev/termination-log</span><span class="hljs-string">          terminationMessagePolicy: File</span><span class="hljs-string">          imagePullPolicy: Always</span><span class="hljs-string">          securityContext:</span><span class="hljs-string">            capabilities: &#123;&#125;</span><span class="hljs-string">      restartPolicy: Always</span><span class="hljs-string">      terminationGracePeriodSeconds: 11</span><span class="hljs-string">      dnsPolicy: ClusterFirst</span><span class="hljs-string">      serviceAccountName: fluent-bit</span><span class="hljs-string">      serviceAccount: fluent-bit</span><span class="hljs-string">      securityContext: &#123;&#125;</span><span class="hljs-string">      imagePullSecrets:</span><span class="hljs-string">        - name: harbor</span><span class="hljs-string">      schedulerName: default-scheduler</span><span class="hljs-string">      tolerations:</span><span class="hljs-string">        - key: node-role.kubernetes.io/master</span><span class="hljs-string">          operator: Exists</span><span class="hljs-string">          effect: NoSchedule</span><span class="hljs-string">        - operator: Exists</span><span class="hljs-string">          effect: NoExecute</span><span class="hljs-string">        - operator: Exists</span><span class="hljs-string">          effect: NoSchedule</span><span class="hljs-string">      dnsConfig:</span><span class="hljs-string">        options:</span><span class="hljs-string">          - name: single-request-reopen</span><span class="hljs-string">  updateStrategy:</span><span class="hljs-string">    type: RollingUpdate</span><span class="hljs-string">    rollingUpdate:</span><span class="hljs-string">      maxUnavailable: 3</span><span class="hljs-string">  revisionHistoryLimit: 10</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="ELK"><a href="#ELK" class="headerlink" title="ELK"></a>ELK</h1><h2 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h2><div class="code-wrapper"><pre><code class="hljs bash">harbor.axzo.cn/ops/elasticsearch:8.14.1</code></pre></div><h2 id="LogStash"><a href="#LogStash" class="headerlink" title="LogStash"></a>LogStash</h2><div class="code-wrapper"><pre><code class="hljs bash">harbor.axzo.cn/ops/logstash:8.14.1</code></pre></div><h2 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h2><div class="code-wrapper"><pre><code class="hljs bash">harbor.axzo.cn/ops/kibana:8.14.1</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-EndPoint使用示例</title>
    <link href="/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
    <url>/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h1><p><img src="/hexo/images/k8s/endpoint.png"></p><div class="code-wrapper"><pre><code class="hljs bash">kubect apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-test-rds-master</span><span class="hljs-string">  namespace: test</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">    targetPort: 3306</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="创建Endpoint"><a href="#创建Endpoint" class="headerlink" title="创建Endpoint"></a>创建Endpoint</h1><div class="code-wrapper"><pre><code class="hljs bash">kubect apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Endpoints</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-test-rds-master</span><span class="hljs-string">  namespace: test</span><span class="hljs-string">subsets:</span><span class="hljs-string">- addresses:</span><span class="hljs-string">  - ip: 172.16.2.143</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-安装</title>
    <link href="/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><div class="code-wrapper"><pre><code class="hljs bash">hostnamectl set-hostname k8s-nodemodprobe overlaymodprobe br_netfilter<span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/modules-load.d/containerd.conf</span><span class="hljs-string">overlay</span><span class="hljs-string">br_netfilter</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/sysctl.d/99-kubernetes-cri.conf</span><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><span class="hljs-string">net.ipv4.ip_forward = 1</span><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/hosts</span><span class="hljs-string">192.168.10.242 k8s-master</span><span class="hljs-string">192.168.10.245 k8s-node1</span><span class="hljs-string">192.168.10.246 k8s-node2</span><span class="hljs-string">192.168.10.247 k8s-node3</span><span class="hljs-string">EOF</span>sysctl --systemsystemctl stop firewalldsystemctl <span class="hljs-built_in">disable</span> firewalldsystemctl unmask firewalld</code></pre></div><h2 id="安装Containerd"><a href="#安装Containerd" class="headerlink" title="安装Containerd"></a>安装Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repodnf updatednf install -y containerd</code></pre></div><h2 id="配置Containerd"><a href="#配置Containerd" class="headerlink" title="配置Containerd"></a>配置Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /etc/containerdcontainerd config default &gt; /etc/containerd/config.tomlsed -i <span class="hljs-string">&#x27;s/SystemdCgroup = false/SystemdCgroup = true/g&#x27;</span> /etc/containerd/config.toml</code></pre></div><h2 id="重启containerd"><a href="#重启containerd" class="headerlink" title="重启containerd"></a>重启containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl daemon-reloadsystemctl restart containerdsystemctl <span class="hljs-built_in">enable</span> --now containerdsystemctl status containerd</code></pre></div><h2 id="安装kubeadm"><a href="#安装kubeadm" class="headerlink" title="安装kubeadm"></a>安装kubeadm</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/yum.repos.d/kubernetes.repo</span><span class="hljs-string">[kubernetes]</span><span class="hljs-string">name=Kubernetes</span><span class="hljs-string">baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/</span><span class="hljs-string">enabled=1</span><span class="hljs-string">gpgcheck=1</span><span class="hljs-string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key</span><span class="hljs-string">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni</span><span class="hljs-string">EOF</span>dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetessystemctl <span class="hljs-built_in">enable</span> --now kubelet</code></pre></div><h2 id="master节点执行"><a href="#master节点执行" class="headerlink" title="master节点执行"></a>master节点执行</h2><div class="code-wrapper"><pre><code class="hljs bash">kubeadm init \--apiserver-advertise-address=192.168.10.242 \--image-repository registry.aliyuncs.com/google_containers \--service-cidr=10.96.0.0/12 \--pod-network-cidr=10.244.0.0/16</code></pre></div><p>执行成功</p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</code></pre></div><h2 id="将其他node加入集群"><a href="#将其他node加入集群" class="headerlink" title="将其他node加入集群"></a>将其他node加入集群</h2><p>在其他节点执行</p><div class="code-wrapper"><pre><code class="hljs bash">kubeadm <span class="hljs-built_in">join</span> 192.168.10.242:6443 --token ijblbd.bmnaf8xcl38iwxbz \--discovery-token-ca-cert-hash sha256:1d76ad35d2d95c6b381ada3d03b15f230201e9e0af41db4db33700d7de604e1d</code></pre></div><h2 id="部署CNI网络组件"><a href="#部署CNI网络组件" class="headerlink" title="部署CNI网络组件"></a>部署CNI网络组件</h2><div class="code-wrapper"><pre><code class="hljs bash">wget https://docs.projectcalico.org/manifests/calico.yaml- 修改IPV4POOL地址kubectl create -f calico.yaml</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
