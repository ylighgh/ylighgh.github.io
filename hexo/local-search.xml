<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FluentBit安装</title>
    <link href="/hexo/2024/06/11/ELK-FluentBit/"/>
    <url>/hexo/2024/06/11/ELK-FluentBit/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://docs.fluentbit.io/manual/installation/getting-started-with-fluent-bit">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/fluent/fluent-bit/master/install.sh | sh</code></pre></div><h1 id="备份默认文件"><a href="#备份默认文件" class="headerlink" title="备份默认文件"></a>备份默认文件</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/fluent-bit/fluent-bit.conf /etc/fluent-bit/fluent-bit.conf.default<span class="hljs-built_in">cp</span> /etc/fluent-bit/parsers.conf /etc/fluent-bit/fparsers.conf.default</code></pre></div><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><h2 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/fluent-bit.conf</span><span class="hljs-string">[SERVICE]</span><span class="hljs-string">    flush        1</span><span class="hljs-string">    daemon       Off</span><span class="hljs-string">    log_level    info</span><span class="hljs-string">    parsers_file parsers.conf</span><span class="hljs-string">    plugins_file plugins.conf</span><span class="hljs-string"></span><span class="hljs-string">@INCLUDE secure-input.conf</span><span class="hljs-string">@INCLUDE secure-filter.conf</span><span class="hljs-string">@INCLUDE secure-output.conf</span><span class="hljs-string">@INCLUDE messages-input.conf</span><span class="hljs-string">@INCLUDE messages-filter.conf</span><span class="hljs-string">@INCLUDE messages-output.conf</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集secure日志配置"><a href="#采集secure日志配置" class="headerlink" title="采集secure日志配置"></a>采集secure日志配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/fluent-bit/parsers.conf</span><span class="hljs-string"></span><span class="hljs-string">[PARSER]</span><span class="hljs-string">    Name axzo-os-log</span><span class="hljs-string">    Format regex</span><span class="hljs-string">    Regex ^(?&lt;time&gt;[^ ]* &#123;1,2&#125;[^ ]* [^ ]*) (?&lt;hostname&gt;[^ ]*) (?&lt;process&gt;[^ ]*)\: (?&lt;message&gt;.*)$</span><span class="hljs-string">    Time_Key    time</span><span class="hljs-string">    Time_Format %b %d %H:%M:%S</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/secure</span><span class="hljs-string">    Tag kube-secure.*</span><span class="hljs-string">    DB                /var/log/flb_kube_secure.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Regex log /.*sshd.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-secure.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/secure-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-secure.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-secure-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h2 id="采集message-kernel日志"><a href="#采集message-kernel日志" class="headerlink" title="采集message kernel日志"></a>采集message kernel日志</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-input.conf</span><span class="hljs-string">[INPUT]</span><span class="hljs-string">    Name tail</span><span class="hljs-string">    Path /var/log/messages</span><span class="hljs-string">    Tag kube-messages.*</span><span class="hljs-string">    DB                /var/log/flb_kube_messages.db</span><span class="hljs-string">    Mem_Buf_Limit     1MB</span><span class="hljs-string">    Skip_Long_Lines   On</span><span class="hljs-string">    Refresh_Interval  10</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/fluent-bit/messages-filter.conf</span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name grep</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Regex log /.*kernel.*/</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name parser</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Key_Name log</span><span class="hljs-string">    Parser axzo-os-log</span><span class="hljs-string"></span><span class="hljs-string">[FILTER]</span><span class="hljs-string">    Name modify</span><span class="hljs-string">    Match kube-messages.*</span><span class="hljs-string">    Add IP $IP</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/fluent-bit/messages-output.conf</span><span class="hljs-string">[OUTPUT]</span><span class="hljs-string">    Name           kafka</span><span class="hljs-string">    Match          kube-messages.*</span><span class="hljs-string">    Brokers        192.168.1.9:9092,192.168.1.9:9091,192.168.1.9:9093</span><span class="hljs-string">    Topics         os-messages-logs</span><span class="hljs-string">    Timestamp_Key  @timestamp</span><span class="hljs-string">    Timestamp_Format iso8601</span><span class="hljs-string">    Retry_Limit    false</span><span class="hljs-string">    # hides errors &quot;Receive failed: Disconnected&quot; when kafka kills idle connections</span><span class="hljs-string">    rdkafka.log.connection.close false</span><span class="hljs-string">    # producer buffer is not included in http://fluentbit.io/documentation/0.12/configuration/memory_usage.html#estimating</span><span class="hljs-string">    rdkafka.queue.buffering.max.kbytes 20240</span><span class="hljs-string">    # for logs you&#x27;ll probably want this ot be 0 or 1, not more</span><span class="hljs-string">    rdkafka.request.required.acks 1</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><div class="code-wrapper"><pre><code class="hljs pgsql">systemctl <span class="hljs-keyword">start</span> fluent-<span class="hljs-type">bit</span>systemctl <span class="hljs-keyword">enable</span> fluent-<span class="hljs-type">bit</span>systemctl status fluent-<span class="hljs-type">bit</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Filebeat安装</title>
    <link href="/hexo/2024/06/11/ELK-Filebeat/"/>
    <url>/hexo/2024/06/11/ELK-Filebeat/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.14/filebeat-installation-configuration.html">官方文档</a></p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/downloadswget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.14.2-x86_64.rpm -O ~/downloads/filebeat-7.14.2-x86_64.rpmyum install -y ~/downloads/filebeat-7.14.2-x86_64.rpm</code></pre></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml.default</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-Service/Ingress</title>
    <link href="/hexo/2024/05/29/Kubernetes-Service/"/>
    <url>/hexo/2024/05/29/Kubernetes-Service/</url>
    
    <content type="html"><![CDATA[<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Kubernetes 中 Service 是 将运行在一个或一组 Pod 上的网络应用程序公开为网络服务的方法。</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><ul><li>ClusterIP</li><li>ExternalName: 返回定义的CNAME别名，可以配置为域名</li><li>NodePort: 所有node上绑定一个端口 在任意一个节点+端口号都能访问</li><li>LoadBalancer: 负载均衡器</li></ul><h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>Ingress 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。</p><p>Ingress 可以提供负载均衡、SSL 终结和基于名称的虚拟托管。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="添加Helm仓库"><a href="#添加Helm仓库" class="headerlink" title="添加Helm仓库"></a>添加Helm仓库</h3><div class="code-wrapper"><pre><code class="hljs bash">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</code></pre></div><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><div class="code-wrapper"><pre><code class="hljs bash">helm pull ingress-nginx/ingress-nginxtar xf ingress-nginx-4.10.1.tgz</code></pre></div><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ingress-nginxhelm install ingress-nginx --create-namespace -n ingress-nginx .</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-存储与配置</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E5%AD%98%E5%82%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><div class="code-wrapper"><pre><code class="hljs bash">kubectl create configmap -h</code></pre></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><p>直接挂载</p></li><li><p>文件挂载</p></li></ul><h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><h2 id="使用类型"><a href="#使用类型" class="headerlink" title="使用类型"></a>使用类型</h2><ul><li>docker-registry</li><li>tls</li></ul><h1 id="SubPath"><a href="#SubPath" class="headerlink" title="SubPath"></a>SubPath</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-持久化存储</title>
    <link href="/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/"/>
    <url>/hexo/2024/05/29/Kubernetes-%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="HostPath"><a href="#HostPath" class="headerlink" title="HostPath"></a>HostPath</h1><h1 id="EmptyDir"><a href="#EmptyDir" class="headerlink" title="EmptyDir"></a>EmptyDir</h1><h1 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h1><h2 id="安装NFS"><a href="#安装NFS" class="headerlink" title="安装NFS"></a>安装NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">yum -y install nfs-utils</code></pre></div><h2 id="启动NFS"><a href="#启动NFS" class="headerlink" title="启动NFS"></a>启动NFS</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl start nfs-serversystemctl <span class="hljs-built_in">enable</span> nfs-server</code></pre></div><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /data/nfs/ro<span class="hljs-built_in">mkdir</span> -p /data/nfs/rw</code></pre></div><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/exports</span><span class="hljs-string">/data/nfs/rw 192.168.10.0/24(rw,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">/data/nfs/ro 192.168.10.0/24(ro,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><span class="hljs-string">EOF</span>exportfs -rsystemctl restart nfs-server</code></pre></div><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /mnt/nfs/rwmount -t nfs 192.168.10.245:/data/nfs/rw /mnt/nfs/rw/</code></pre></div><h1 id="PV-PVC"><a href="#PV-PVC" class="headerlink" title="PV&#x2F;PVC"></a>PV&#x2F;PVC</h1>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-EndPoint使用示例</title>
    <link href="/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
    <url>/hexo/2024/05/29/Kubernetes-EndPoint%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h1><p><img src="/hexo/images/k8s/endpoint.png"></p><div class="code-wrapper"><pre><code class="hljs bash">kubect apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Service</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-test-rds-master</span><span class="hljs-string">  namespace: test</span><span class="hljs-string">spec:</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">    targetPort: 3306</span><span class="hljs-string">  sessionAffinity: None</span><span class="hljs-string">  type: ClusterIP</span><span class="hljs-string">EOF</span></code></pre></div><h1 id="创建Endpoint"><a href="#创建Endpoint" class="headerlink" title="创建Endpoint"></a>创建Endpoint</h1><div class="code-wrapper"><pre><code class="hljs bash">kubect apply -f - &lt;&lt;<span class="hljs-string">EOF</span><span class="hljs-string">apiVersion: v1</span><span class="hljs-string">kind: Endpoints</span><span class="hljs-string">metadata:</span><span class="hljs-string">  name: axzo-test-rds-master</span><span class="hljs-string">  namespace: test</span><span class="hljs-string">subsets:</span><span class="hljs-string">- addresses:</span><span class="hljs-string">  - ip: 172.16.2.143</span><span class="hljs-string">  ports:</span><span class="hljs-string">  - port: 3306</span><span class="hljs-string">    protocol: TCP</span><span class="hljs-string">EOF</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-安装</title>
    <link href="/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/"/>
    <url>/hexo/2024/05/28/Kubernetes-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><div class="code-wrapper"><pre><code class="hljs bash">hostnamectl set-hostname k8s-nodemodprobe overlaymodprobe br_netfilter<span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/modules-load.d/containerd.conf</span><span class="hljs-string">overlay</span><span class="hljs-string">br_netfilter</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt; /etc/sysctl.d/99-kubernetes-cri.conf</span><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><span class="hljs-string">net.ipv4.ip_forward = 1</span><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><span class="hljs-string">EOF</span><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;&gt; /etc/hosts</span><span class="hljs-string">192.168.10.242 k8s-master</span><span class="hljs-string">192.168.10.245 k8s-node1</span><span class="hljs-string">192.168.10.246 k8s-node2</span><span class="hljs-string">192.168.10.247 k8s-node3</span><span class="hljs-string">EOF</span>sysctl --systemsystemctl stop firewalldsystemctl <span class="hljs-built_in">disable</span> firewalldsystemctl unmask firewalld</code></pre></div><h2 id="安装Containerd"><a href="#安装Containerd" class="headerlink" title="安装Containerd"></a>安装Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repodnf updatednf install -y containerd</code></pre></div><h2 id="配置Containerd"><a href="#配置Containerd" class="headerlink" title="配置Containerd"></a>配置Containerd</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /etc/containerdcontainerd config default &gt; /etc/containerd/config.tomlsed -i <span class="hljs-string">&#x27;s/SystemdCgroup = false/SystemdCgroup = true/g&#x27;</span> /etc/containerd/config.toml</code></pre></div><h2 id="重启containerd"><a href="#重启containerd" class="headerlink" title="重启containerd"></a>重启containerd</h2><div class="code-wrapper"><pre><code class="hljs bash">systemctl daemon-reloadsystemctl restart containerdsystemctl <span class="hljs-built_in">enable</span> --now containerdsystemctl status containerd</code></pre></div><h2 id="安装kubeadm"><a href="#安装kubeadm" class="headerlink" title="安装kubeadm"></a>安装kubeadm</h2><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF&gt;/etc/yum.repos.d/kubernetes.repo</span><span class="hljs-string">[kubernetes]</span><span class="hljs-string">name=Kubernetes</span><span class="hljs-string">baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/</span><span class="hljs-string">enabled=1</span><span class="hljs-string">gpgcheck=1</span><span class="hljs-string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key</span><span class="hljs-string">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni</span><span class="hljs-string">EOF</span>dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetessystemctl <span class="hljs-built_in">enable</span> --now kubelet</code></pre></div><h2 id="master节点执行"><a href="#master节点执行" class="headerlink" title="master节点执行"></a>master节点执行</h2><div class="code-wrapper"><pre><code class="hljs bash">kubeadm init \--apiserver-advertise-address=192.168.10.242 \--image-repository registry.aliyuncs.com/google_containers \--service-cidr=10.96.0.0/12 \--pod-network-cidr=10.244.0.0/16</code></pre></div><p>执行成功</p><div class="code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</code></pre></div><h2 id="将其他node加入集群"><a href="#将其他node加入集群" class="headerlink" title="将其他node加入集群"></a>将其他node加入集群</h2><p>在其他节点执行</p><div class="code-wrapper"><pre><code class="hljs bash">kubeadm <span class="hljs-built_in">join</span> 192.168.10.242:6443 --token ijblbd.bmnaf8xcl38iwxbz \--discovery-token-ca-cert-hash sha256:1d76ad35d2d95c6b381ada3d03b15f230201e9e0af41db4db33700d7de604e1d</code></pre></div><h2 id="部署CNI网络组件"><a href="#部署CNI网络组件" class="headerlink" title="部署CNI网络组件"></a>部署CNI网络组件</h2><div class="code-wrapper"><pre><code class="hljs bash">wget https://docs.projectcalico.org/manifests/calico.yaml- 修改IPV4POOL地址kubectl create -f calico.yaml</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
